openapi: 3.0.3
info:
  version: 1.0.0
  title: Corbado Frontend API
  description: Overview of all Corbado Frontend API calls to implement passwordless authentication.
  contact:
    name: Corbado team
    email: support@corbado.com
    url: https://www.corbado.com
servers:
  - url: https://<project ID>.frontendapi.corbado.io
security:
  - bearerAuth: []
  - projectID: []
tags:
  - name: Users
    description: All API calls to handle users
  - name: Projects
    description: All API calls to handle project
  - name: Assets
    description: All asset calls
  - name: Sessions
    description: All API calls to handle session management
paths:
  /v1/me:
    get:
      description: Gets current user
      operationId: CurrentUserGet
      tags:
        - Users
      responses:
        '200':
          description: Provides current user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/me/passkeys:
    get:
      description: Gets current user's passkeys
      operationId: CurrentUserPassKeyGet
      tags:
        - Users
      responses:
        '200':
          description: Provides current user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mePassKeyRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/me/passkeys/{credentialID}:
    delete:
      description: Delete current user's passkeys
      operationId: CurrentUserPassKeyDelete
      parameters:
        - in: path
          required: true
          name: credentialID
          schema:
            type: string
          description: Credential ID from passkeys
          example: cre-abc123
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/error'
  /v1/users/authmethods:
    post:
      description: Lists user's available authentication methods
      operationId: AuthMethodsList
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authMethodsListReq'
      responses:
        '200':
          description: Authentication methods retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authMethodsListRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/login/start:
    post:
      description: Performs passkey login start
      operationId: PassKeyLoginStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyLoginStartReq'
      responses:
        '200':
          description: Provides challenge for perform PassKey ceremony
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/login/finish:
    post:
      description: Performs passkey login finish
      operationId: PassKeyLoginFinish
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyFinishReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyLoginFinishRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/mediation/start:
    post:
      description: Performs passkey mediation start
      operationId: PassKeyMediationStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyMediationStartReq'
      responses:
        '200':
          description: Provides challenge for perform PassKey ceremony
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyMediationStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/register/start:
    post:
      description: Performs passkey register start
      operationId: PassKeyRegisterStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyRegisterStartReq'
      responses:
        '200':
          description: Provides challenge for perform PassKey ceremony
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/register/finish:
    post:
      description: Performs passkey register finish
      operationId: PassKeyRegisterFinish
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyFinishReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyRegisterFinishRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/append/start:
    post:
      description: Performs passkey append start
      operationId: PassKeyAppendStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyReq'
      responses:
        '200':
          description: Provides challenge for perform PassKey ceremony
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/append/finish:
    post:
      description: Performs passkey append finish
      operationId: PassKeyAppendFinish
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyFinishReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyAppendFinishRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/passkey/associate/start:
    post:
      description: Performs passkey associate start
      operationId: PassKeyAssociateStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyAssociateStartReq'
      responses:
        '200':
          description: Provides challenge for perform PassKey ceremony
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emaillinks/register/start:
    post:
      description: Performs email link register start
      operationId: EmailLinkRegisterStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinkRegisterStartReq'
      responses:
        '200':
          description: Successfully started register
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkRegisterStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emaillinks/confirm:
    post:
      description: Performs email link register confirm
      operationId: EmailLinkConfirm
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinkConfirmReq'
      responses:
        '200':
          description: Successfully confirmed email link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkConfirmRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emaillinks/login/start:
    post:
      description: Performs email link login start
      operationId: EmailLinkLoginStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinkLoginStartReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkLoginStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emaillinks/status:
    post:
      description: Performs email link login status check
      operationId: EmailLinkStatus
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinkStatusReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkStatusRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emailcodes/register/start:
    post:
      description: Performs email OTP register start
      operationId: EmailCodeRegisterStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailCodeRegisterStartReq'
      responses:
        '200':
          description: Successfully started register
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeRegisterStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emailcodes/confirm:
    post:
      description: Performs email OTP register confirm
      operationId: EmailCodeConfirm
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailCodeConfirmReq'
      responses:
        '200':
          description: Successfully confirmed email OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeConfirmRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emailcodes/login/start:
    post:
      description: Performs email OTP login start
      operationId: EmailCodeLoginStart
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailCodeLoginStartReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeLoginStartRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/emailcodes/status:
    post:
      description: Performs email OTP login status check
      operationId: EmailCodeStatus
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailCodeStatusReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeStatusRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/password/verify:
    post:
      description: Performs password verify
      operationId: Password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordVerifyReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passwordVerifyRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/exists:
    put:
      description: Checks if a confirmed user exists for provided login identifier
      operationId: UserExists
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userExistsReq'
      responses:
        '200':
          description: User existence check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userExistsRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/logintoken:
    post:
      description: Performs login for given token
      operationId: LoginToken
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginTokenReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginTokenRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/users/device/passkey:
    post:
      description: Checks if active passkey credential exists for provided user and device
      operationId: PassKeyCredentialExists
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passKeyCredentialExistsReq'
      responses:
        '200':
          description: PassKeys credentials check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passKeyCredentialExistsRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/projects/projectConfig:
    get:
      description: Get project configuration
      operationId: ProjectConfig
      tags:
        - Projects
      responses:
        '200':
          description: Project Configuration successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectConfigRsp'
        default:
          $ref: '#/components/responses/error'
  /.well-known/assetlinks.json:
    get:
      description: Provides asset links for android devices
      operationId: AssetLinks
      tags:
        - Assets
      responses:
        '200':
          description: Provides a list of assets links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetLinksRsp'
        default:
          $ref: '#/components/responses/error'
  /.well-known/apple-app-site-association:
    get:
      description: Provides apple app site association
      operationId: AppleAppSiteAssociation
      tags:
        - Assets
      responses:
        '200':
          description: Provides a list of site association
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appleAppSiteAssociationRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/sessions/logout:
    delete:
      description: Performs session logout
      operationId: SessionLogout
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyReq'
      responses:
        '200':
          description: Successful performed logout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logoutRsp'
        default:
          $ref: '#/components/responses/error'
  /v1/sessions/refresh:
    put:
      description: Performs session refresh
      operationId: SessionRefresh
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyReq'
      responses:
        '200':
          description: Provides a session token to initialize your session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionRefreshRsp'
        default:
          $ref: '#/components/responses/error'
  /.well-known/jwks:
    get:
      description: Retrieves well-known JWKS for Project ID
      operationId: WellKnownJWKSList
      tags:
        - Sessions
      responses:
        '200':
          description: JWKS successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wellKnownJWKSListRsp'
        default:
          $ref: '#/components/responses/error'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    projectID:
      in: header
      name: X-Corbado-ProjectID
      type: apiKey
  schemas:
    meRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/fullUser'
    mePassKeyRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/passKeyList'
    passKeyList:
      type: object
      required:
        - passkeys
      properties:
        passkeys:
          type: array
          items:
            $ref: '#/components/schemas/passKeyItem'
        paging:
          $ref: '#/components/schemas/paging'
    passKeyItem:
      type: object
      required:
        - id
        - credentialHash
        - aaguid
        - userAgent
        - attestationType
        - transport
        - backupEligible
        - backupState
        - lastUsed
        - status
        - created
      properties:
        id:
          type: string
        credentialHash:
          type: string
        aaguid:
          type: string
        userAgent:
          type: string
        attestationType:
          type: string
        transport:
          type: array
          items:
            type: string
        backupEligible:
          type: boolean
        backupState:
          type: boolean
        lastUsed:
          type: string
          description: Timestamp of when the entity was last used in yyyy-MM-dd'T'HH:mm:ss format
        status:
          type: string
          enum:
            - pending
            - active
          description: Status
        created:
          $ref: '#/components/schemas/created'
    authMethodsListReq:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          description: Users login name
        requestID:
          $ref: '#/components/schemas/requestID'
    authMethodsListRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - selectedMethods
                - possibleMethods
              properties:
                selectedMethods:
                  $ref: '#/components/schemas/authMethods'
                possibleMethods:
                  $ref: '#/components/schemas/authMethods'
    passKeyLoginStartReq:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          description: Users login name
        requestID:
          $ref: '#/components/schemas/requestID'
    passKeyStartRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - challenge
              properties:
                challenge:
                  type: string
                  description: Contains json payload data for start webauthn login challenge
    passKeyFinishReq:
      type: object
      properties:
        signedChallenge:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - signedChallenge
    passKeyLoginFinishRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              allOf:
                - type: object
                  properties:
                    username:
                      type: string
                    confirmedCredential:
                      type: boolean
                  required:
                    - username
                    - confirmedCredential
                - $ref: '#/components/schemas/authenticationRsp'
    passKeyRegisterFinishRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/authenticationRsp'
    passKeyRegisterStartReq:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          description: Users login name
        fullName:
          type: string
          description: Users full name
        requestID:
          $ref: '#/components/schemas/requestID'
    passKeyAppendFinishRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                redirectURL:
                  type: string
              required:
                - redirectURL
    passKeyMediationStartReq:
      type: object
      properties:
        requestID:
          $ref: '#/components/schemas/requestID'
        username:
          type: string
    passKeyMediationStartRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - challenge
              properties:
                challenge:
                  type: string
                  description: Contains json payload data for start webauthn mediation challenge
    passKeyAssociateStartReq:
      type: object
      required:
        - associationToken
      properties:
        associationToken:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
    emailLinkRegisterStartReq:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - email
    emailLinkRegisterStartRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                emailLinkID:
                  type: string
              required:
                - emailLinkID
    emailLinkConfirmReq:
      type: object
      properties:
        emailLinkID:
          type: string
        token:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - emailLinkID
        - token
    emailLinkLoginStartReq:
      type: object
      properties:
        username:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - username
    emailLinkLoginStartRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                emailLinkID:
                  type: string
              required:
                - emailLinkID
    emailLinkStatusReq:
      type: object
      properties:
        emailLinkID:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - emailLinkID
    emailLinkStatusRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/authenticationRsp'
    emailLinkConfirmRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              allOf:
                - type: object
                  properties:
                    authMethods:
                      $ref: '#/components/schemas/authMethods'
                  required:
                    - authMethods
                - $ref: '#/components/schemas/authenticationRsp'
    emailCodeRegisterStartReq:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - email
    emailCodeRegisterStartRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                emailCodeID:
                  type: string
              required:
                - emailCodeID
    emailCodeConfirmReq:
      type: object
      properties:
        emailCodeID:
          type: string
        code:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - emailCodeID
        - code
    emailCodeLoginStartReq:
      type: object
      properties:
        username:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - username
    emailCodeLoginStartRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                emailCodeID:
                  type: string
              required:
                - emailCodeID
    emailCodeStatusReq:
      type: object
      properties:
        emailCodeID:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - emailCodeID
    emailCodeStatusRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/authenticationRsp'
    emailCodeConfirmRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              allOf:
                - type: object
                  properties:
                    authMethods:
                      $ref: '#/components/schemas/authMethods'
                  required:
                    - authMethods
                - $ref: '#/components/schemas/authenticationRsp'
    passwordVerifyReq:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - username
        - password
    passwordVerifyRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/authenticationRsp'
    userExistsReq:
      type: object
      required:
        - loginIdentifier
        - loginIdentifierType
      properties:
        loginIdentifier:
          type: string
        loginIdentifierType:
          $ref: '#/components/schemas/loginIdentifierType'
        requestID:
          $ref: '#/components/schemas/requestID'
    userExistsRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - exists
          properties:
            exists:
              type: boolean
    loginTokenReq:
      type: object
      properties:
        token:
          type: string
        requestID:
          $ref: '#/components/schemas/requestID'
      required:
        - token
    loginTokenRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/authenticationRsp'
    passKeyCredentialExistsReq:
      type: object
      required:
        - loginIdentifier
        - loginIdentifierType
      properties:
        loginIdentifier:
          type: string
        loginIdentifierType:
          $ref: '#/components/schemas/loginIdentifierType'
        requestID:
          $ref: '#/components/schemas/requestID'
    passKeyCredentialExistsRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - exists
          properties:
            exists:
              type: boolean
    projectConfigRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - allowUserRegistration
                - passkeyAppendInterval
                - fallbackLanguage
                - autoDetectLanguage
                - userFullNameRequired
                - webComponentDebug
                - environment
                - signupFlow
                - signupFlowOptions
                - loginFlow
                - loginFlowOptions
                - sessionManagement
              properties:
                allowUserRegistration:
                  type: boolean
                passkeyAppendInterval:
                  type: string
                fallbackLanguage:
                  type: string
                autoDetectLanguage:
                  type: boolean
                userFullNameRequired:
                  type: boolean
                webComponentDebug:
                  type: boolean
                environment:
                  type: string
                signupFlow:
                  type: string
                signupFlowOptions:
                  type: object
                loginFlow:
                  type: string
                loginFlowOptions:
                  type: object
                sessionManagement:
                  $ref: '#/components/schemas/sessionManagement'
    assetLinksRsp:
      type: array
      items:
        $ref: '#/components/schemas/assetLink'
    assetLink:
      type: object
      required:
        - relation
        - target
      properties:
        relation:
          type: array
          items:
            type: string
        target:
          $ref: '#/components/schemas/assetLinkTarget'
    assetLinkTarget:
      type: object
      required:
        - namespace
      properties:
        namespace:
          type: string
        package_name:
          type: string
        site:
          type: string
        sha256_cert_fingerprints:
          type: array
          items:
            type: string
    appleAppSiteAssociationRsp:
      type: object
      required:
        - applinks
        - webcredentials
        - appclips
      properties:
        applinks:
          type: object
          required:
            - details
          properties:
            details:
              type: array
              items:
                type: object
                required:
                  - appID
                  - paths
                properties:
                  appID:
                    type: string
                  paths:
                    type: array
                    items:
                      type: string
        webcredentials:
          type: object
          required:
            - apps
          properties:
            apps:
              type: array
              items:
                type: string
        appclips:
          type: object
          required:
            - apps
          properties:
            apps:
              type: array
              items:
                type: string
    wellKnownJWKSListRsp:
      type: object
      required:
        - keys
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/jwk'
    jwk:
      description: JSON Web Key
      type: object
      required:
        - alg
        - kty
        - use
        - 'n'
        - e
        - kid
      properties:
        alg:
          description: The specific cryptographic algorithm used with the key
          type: string
          example: RS256
        kty:
          description: The family of cryptographic algorithms used with the key
          type: string
          example: RSA
        use:
          description: How the key was meant to be used; sig represents the signature
          type: string
        'n':
          description: The modulus for the RSA public key
          type: string
        e:
          description: The exponent for the RSA public key
          type: string
        kid:
          description: The unique identifier for the key
          type: string
    sessionRefreshRsp:
      type: object
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - $ref: '#/components/schemas/authenticationRsp'
    shortSession:
      type: object
      required:
        - key
        - value
        - domain
        - path
        - secure
        - expires
        - sameSite
      properties:
        key:
          type: string
        value:
          type: string
        domain:
          type: string
        path:
          type: string
        secure:
          type: boolean
        expires:
          type: string
        sameSite:
          type: string
    logoutRsp:
      type: object
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          properties:
            shortSession:
              $ref: '#/components/schemas/shortSession'
    emptyReq:
      type: object
      properties:
        requestID:
          $ref: '#/components/schemas/requestID'
    authenticationRsp:
      type: object
      required:
        - redirectURL
        - authMethods
      properties:
        redirectURL:
          type: string
        sessionToken:
          type: string
          description: Only given when using session v1
        longSession:
          type: string
          description: Only given when project environment is dev
        shortSession:
          $ref: '#/components/schemas/shortSession'
        authMethods:
          $ref: '#/components/schemas/authMethods'
    requestID:
      description: Unique ID of request, you can provide your own while making the request, if not the ID will be randomly generated on server side
      type: string
      example: req-557...663
    requestData:
      description: Data about the request itself, can be used for debugging
      type: object
      required:
        - requestID
        - link
      properties:
        requestID:
          $ref: '#/components/schemas/requestID'
        link:
          description: Link to dashboard with details about request
          type: string
          example: https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
    genericRsp:
      type: object
      required:
        - httpStatusCode
        - message
        - requestData
        - runtime
      properties:
        httpStatusCode:
          description: HTTP status code of operation
          type: integer
          format: int32
          minimum: 200
          maximum: 599
        message:
          type: string
          example: OK
        requestData:
          $ref: '#/components/schemas/requestData'
        runtime:
          description: Runtime in seconds for this request
          type: number
          format: float
          example: 0.06167686
    errorRsp:
      allOf:
        - $ref: '#/components/schemas/genericRsp'
        - type: object
          required:
            - error
          properties:
            data:
              type: object
            error:
              type: object
              required:
                - type
                - links
              properties:
                type:
                  description: Type of error
                  type: string
                details:
                  description: Details of error
                  type: string
                validation:
                  description: Validation errors per field
                  type: array
                  items:
                    type: object
                    required:
                      - field
                      - message
                    properties:
                      field:
                        type: string
                      message:
                        type: string
                links:
                  description: Additional links to help understand the error
                  type: array
                  items:
                    type: string
    userID:
      description: ID of the user
      type: string
    created:
      description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss format
      type: string
    updated:
      description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss format
      type: string
    status:
      type: string
      enum:
        - active
        - pending
        - deleted
      description: Generic status that can describe Corbado entities
    ID:
      description: generic ID
      type: string
    userEmail:
      type: object
      description: User's email
      required:
        - ID
        - email
        - created
        - updated
        - status
      properties:
        ID:
          $ref: '#/components/schemas/ID'
        email:
          type: string
        created:
          $ref: '#/components/schemas/created'
        updated:
          $ref: '#/components/schemas/updated'
        status:
          $ref: '#/components/schemas/status'
    userPhoneNumber:
      type: object
      description: User's phone number
      required:
        - ID
        - phoneNumber
        - created
        - updated
        - status
      properties:
        ID:
          $ref: '#/components/schemas/ID'
        phoneNumber:
          type: string
        created:
          $ref: '#/components/schemas/created'
        updated:
          $ref: '#/components/schemas/updated'
        status:
          $ref: '#/components/schemas/status'
    fullUser:
      type: object
      description: User entry with emails and phone numbers
      required:
        - ID
        - name
        - fullName
        - created
        - updated
        - status
        - emails
        - phoneNumbers
      properties:
        ID:
          $ref: '#/components/schemas/userID'
        name:
          type: string
        fullName:
          type: string
        created:
          $ref: '#/components/schemas/created'
        updated:
          $ref: '#/components/schemas/updated'
        status:
          $ref: '#/components/schemas/status'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/userEmail'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/userPhoneNumber'
    paging:
      type: object
      required:
        - page
        - totalPages
        - totalItems
      properties:
        page:
          description: current page returned in response
          type: integer
          default: 1
        totalPages:
          description: total number of pages available
          type: integer
        totalItems:
          description: total number of items available
          type: integer
    authMethod:
      type: string
      enum:
        - email
        - phone_number
        - webauthn
        - password
      description: Authentication methods
    authMethods:
      type: array
      items:
        $ref: '#/components/schemas/authMethod'
    loginIdentifierType:
      description: Login Identifier type
      type: string
      enum:
        - email
        - phone_number
        - custom
    sessionManagement:
      description: What session management should be used
      type: string
      enum:
        - SessionManagementCorbado
        - SessionManagementOwn
  responses:
    '200':
      description: Operation succeeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/genericRsp'
    error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorRsp'

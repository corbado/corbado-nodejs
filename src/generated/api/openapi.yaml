openapi: 3.0.3
info:
  contact:
    email: support@corbado.com
    name: Corbado team
    url: https://www.corbado.com
  description: "\n# Introduction\nThis documentation gives an overview of all Corbado\
    \ Backend API calls to implement passwordless authentication with Passkeys.\n\n\
    The Corbado Backend API is organized around REST principles. It uses resource-oriented\
    \ URLs with verbs (HTTP methods) and HTTP status codes. Requests need to be valid\
    \ JSON payloads. We always return JSON.\n\nThe Corbado Backend API specification\
    \ is written in **OpenAPI Version 3.0.3**. You can download it via the download\
    \ button at the top and use it to generate clients in languages we do not provide\
    \ officially for example.\n\n# Authentication\nTo authenticate your API requests\
    \ HTTP Basic Auth is used.\n\nYou need to set the projectID as username and the\
    \ API secret as password. The authorization header looks as follows:\n\n`Basic\
    \ <<projectID>:<API secret>>`\n\nThe **authorization header** needs to be **Base64\
    \ encoded** to be working. If the authorization header is missing or incorrect,\
    \ the API will respond with status code 401.\n\n# Error types\nAs mentioned above\
    \ we make use of HTTP status codes. **4xx** errors indicate so called client errors,\
    \ meaning the error occurred on client side and you need to fix it. **5xx** errors\
    \ indicate server errors, which means the error occurred on server side and outside\
    \ your control.\n\nBesides HTTP status codes Corbado uses what we call error types\
    \ which gives more details in error cases and help you to debug your request.\n\
    \n## internal_error\nThe error type **internal_error** is used when some internal\
    \ error occurred at Corbado. You can retry your request but usually there is nothing\
    \ you can do about it. All internal errors get logged and will triggert an alert\
    \ to our operations team which takes care of the situation as soon as possible.\n\
    \n## not_found\nThe error type **not_found** is used when you try to get a resource\
    \ which cannot be found. Most common case is that you provided a wrong ID.\n\n\
    ## method_not_allowed\nThe error type **method_not_allowed** is used when you\
    \ use a HTTP method (GET for example) on a resource/endpoint which it not supports.\
    \ \n\n## validation_error\nThe error type **validation_error** is used when there\
    \ is validation error on the data you provided in the request payload or path.\
    \ There will be detailed information in the JSON response about the validation\
    \ error like what exactly went wrong on what field. \n\n## project_id_mismatch\n\
    The error type **project_id_mismatch** is used when there is a project ID you\
    \ provided mismatch.\n\n## login_error\nThe error type **login_error** is used\
    \ when the authentication failed. Most common case is that you provided a wrong\
    \ pair of project ID and API secret. As mentioned above with use HTTP Basic Auth\
    \ for authentication.\n\n## invalid_json\nThe error type **invalid_json** is used\
    \ when you send invalid JSON as request body. There will be detailed information\
    \ in the JSON response about what went wrong.\n\n## rate_limited\nThe error type\
    \ **rate_limited** is used when ran into rate limiting of the Corbado Backend\
    \ API. Right now you can do a maximum of **2000 requests** within **10 seconds**\
    \ from a **single IP**. Throttle your requests and try again. If you think you\
    \ need more contact support@corbado.com.\n\n## invalid_origin\nThe error type\
    \ **invalid_origin** is used when the API has been called from a origin which\
    \ is not authorized (CORS). Add the origin to your project at https://app.corbado.com/app/settings/credentials/authorized-origins.\n\
    \n## already_exists\nThe error type **already_exists** is used when you try create\
    \ a resource which already exists. Most common case is that there is some unique\
    \ constraint on one of the fields.\n\n# Security and privacy\nCorbado services\
    \ are designed, developed, monitored, and updated with security at our core to\
    \ protect you and your customers’ data and privacy.\n\n## Security\n\n### Infrastructure\
    \ security\nCorbado leverages highly available and secure cloud infrastructure\
    \ to ensure that our services are always available and securely delivered. Corbado's\
    \ services are operated in uvensys GmbH's data centers in Germany and comply with\
    \ ISO standard 27001. All data centers have redundant power and internet connections\
    \ to avoid failure. The main location of the servers used is in Linden and offers\
    \ 24/7 support. We do not use any AWS, GCP or Azure services.\n\nEach server is\
    \ monitored 24/7 and in the event of problems, automated information is sent via\
    \ SMS and e-mail. The monitoring is done by the external service provider Serverguard24\
    \ GmbH. \n\nAll Corbado hardware and networking is routinely updated and audited\
    \ to ensure systems are secure and that least privileged access is followed. Additionally\
    \ we implement robust logging and audit protocols that allow us high visibility\
    \ into system use.\n\n### Responsible disclosure program\nHere at Corbado, we\
    \ take the security of our user’s data and of our services seriously. As such,\
    \ we encourage responsible security research on Corbado services and products.\
    \ If you believe you’ve discovered a potential vulnerability, please let us know\
    \ by emailing us at [security@corbado.com](mailto:security@corbado.com). We will\
    \ acknowledge your email within 2 business days. As public disclosures of a security\
    \ vulnerability could put the entire Corbado community at risk, we ask that you\
    \ keep such potential vulnerabilities confidential until we are able to address\
    \ them. We aim to resolve critical issues within 30 days of disclosure. Please\
    \ make a good faith effort to avoid violating privacy, destroying data, or interrupting\
    \ or degrading the Corbado service. Please only interact with accounts you own\
    \ or for which you have explicit permission from the account holder. While researching,\
    \ please refrain from:\n\n- Distributed Denial of Service (DDoS)\n- Spamming\n\
    - Social engineering or phishing of Corbado employees or contractors\n- Any attacks\
    \ against Corbado's physical property or data centers\n\nThank you for helping\
    \ to keep Corbado and our users safe!\n\n### Rate limiting\nAt Corbado, we apply\
    \ rate limit policies on our APIs in order to protect your application and user\
    \ management infrastructure, so your users will have a frictionless non-interrupted\
    \ experience.\n\nCorbado responds with HTTP status code 429 (too many requests)\
    \ when the rate limits exceed.\nYour code logic should be able to handle such\
    \ cases by checking the status code on the response and recovering from such cases.\n\
    If a retry is needed, it is best to allow for a back-off to avoid going into an\
    \ infinite retry loop.\n\nThe current rate limit for all our API endpoints is\
    \ **max. 100 requests per 10 seconds**.\n\n## Privacy\nCorbado is committed to\
    \ protecting the personal data of our customers and their customers. Corbado has\
    \ in place appropriate data security measures that meet industry standards. We\
    \ regularly review and make enhancements to our processes, products, documentation,\
    \ and contracts to help support ours and our customers’ compliance for the processing\
    \ of personal data.\n\nWe try to minimize the usage and processing of personally\
    \ identifiable information. Therefore, all our services are constructed to avoid\
    \ unnecessary data consumption.\n\nTo make our services work, we only require\
    \ the following data:\n- any kind of identifier (e.g. UUID, phone number, email\
    \ address)\n- IP address (only temporarily for rate limiting aspects)\n- User\
    \ agent (for device management)\n"
  title: Corbado Backend API
  version: 1.0.0
servers:
- url: https://backendapi.corbado.io
security:
- basicAuth: []
- bearerAuth: []
tags:
- description: All API calls to handle email magic links
  name: Email magic links
- description: All API calls to handle email OTP
  name: Email OTP
- description: All API calls to handle SMS OTP
  name: SMS OTP
- description: All API calls to manage request logs
  name: Request logs
- description: All API calls to handle validation
  name: Validation
- description: All API calls to handle Passkeys (Biometrics)
  name: Passkeys (Biometrics)
- description: All API calls to handle user functionality
  name: User
- description: All API calls to handle email templates
  name: Email templates
- description: All API calls to handle SMS templates
  name: SMS templates
- description: All API calls to handle API secrets
  name: API secrets
- description: All API calls to handle authentication methods
  name: Auth Methods
- description: All API calls to handle tracking
  name: Analyzer
- description: All API calls to handle project configuration
  name: Project config
- description: All API calls to handle session config for Corbado session management
    (see https://docs.corbado.com/sessions/overview for more details)
  name: Session config
- description: All API calls to handle long sessions for Corbado session management
    (see https://docs.corbado.com/sessions/overview for more details)
  name: Long sessions
- description: All API calls to handle auth tokens for own session management (see
    https://docs.corbado.com/sessions/own-session-management for more details)
  name: Auth Tokens
- description: All API calls to handle association tokens
  name: Association Tokens
- description: All API calls to manage webhook logs
  name: Webhook logs
- description: All API calls to handle iOS app configurations
  name: iOS App Config
- description: All API calls to handle Android app configurations
  name: Android App Config
- description: All API calls to download example projects
  name: Examples
paths:
  /v1/projects/activate:
    put:
      description: Activates the project
      operationId: ProjectActivate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Project config
      x-eov-operation-handler: controllers/ProjectConfigController
  /v1/projectSecrets:
    get:
      description: Lists API secrets
      operationId: ProjectSecretList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectSecretListRsp'
          description: List of API secrets
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - API secrets
      x-eov-operation-handler: controllers/APISecretsController
    post:
      description: Creates an API secret
      operationId: ProjectSecretCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectSecretCreateReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectSecretCreateRsp'
          description: API secret successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - API secrets
      x-eov-operation-handler: controllers/APISecretsController
  /v1/projectSecrets/{secretID}:
    delete:
      description: Deletes API secret
      operationId: ProjectSecretDelete
      parameters:
      - description: Secret ID from create
        example: pse-abc123
        explode: false
        in: path
        name: secretID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectSecretDeleteReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - API secrets
      x-eov-operation-handler: controllers/APISecretsController
  /v1/authMethods:
    post:
      description: Retrieves possible authentication methods for provided username
      operationId: AuthMethodsList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authMethodsListReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authMethodsListRsp'
          description: Auth methods successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Auth Methods
      x-eov-operation-handler: controllers/AuthMethodsController
  /v1/userauthlogs:
    get:
      description: Lists user auth log
      operationId: UserAuthLogList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAuthLogListRsp'
          description: Auth methods successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/smsCodes:
    post:
      description: Creates SMS OTP and sends it to given phone number
      operationId: SmsCodeSend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smsCodeSendReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smsCodeSendRsp'
          description: SMS successfully sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - SMS OTP
      x-eov-operation-handler: controllers/SMSOTPController
  /v1/smsCodes/{smsCodeID}/validate:
    put:
      description: Validates SMS OTP
      operationId: SmsCodeValidate
      parameters:
      - description: ID of SMS OTP
        explode: false
        in: path
        name: smsCodeID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smsCodeValidateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smsCodeValidateRsp'
          description: Validation was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - SMS OTP
      x-eov-operation-handler: controllers/SMSOTPController
  /v1/emailLinks:
    post:
      description: Creates email magic link and sends it to given email address
      operationId: EmailLinkSend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinkSendReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkSendRsp'
          description: Email successfully sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email magic links
      x-eov-operation-handler: controllers/EmailMagicLinksController
  /v1/emailLinks/{emailLinkID}/validate:
    put:
      description: Validates email magic link token
      operationId: EmailLinkValidate
      parameters:
      - description: ID of email magic link
        explode: false
        in: path
        name: emailLinkID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinksValidateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkValidateRsp'
          description: Validation was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email magic links
      x-eov-operation-handler: controllers/EmailMagicLinksController
  /v1/emailLinks/{emailLinkID}:
    delete:
      description: Deletes an email magic link
      operationId: EmailLinkDelete
      parameters:
      - description: ID of email magic link
        explode: false
        in: path
        name: emailLinkID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailLinksDeleteReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkValidateRsp'
          description: Validation was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email magic links
      x-eov-operation-handler: controllers/EmailMagicLinksController
    get:
      description: Get an email magic link only one time after confirmed
      operationId: EmailLinkGet
      parameters:
      - description: ID of email magic link
        explode: false
        in: path
        name: emailLinkID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailLinkGetRsp'
          description: Contains details of an email link
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email magic links
      x-eov-operation-handler: controllers/EmailMagicLinksController
  /v1/emailCodes:
    post:
      description: Creates email code and sends it to given email address
      operationId: EmailCodeSend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailCodeSendReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeSendRsp'
          description: Email successfully sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email OTP
      x-eov-operation-handler: controllers/EmailOTPController
  /v1/emailCodes/{emailCodeID}/validate:
    put:
      description: Validates email code
      operationId: EmailCodeValidate
      parameters:
      - description: ID of email OTP
        explode: false
        in: path
        name: emailCodeID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailCodeValidateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeValidateRsp'
          description: Validation was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email OTP
      x-eov-operation-handler: controllers/EmailOTPController
  /v1/emailCodes/{emailCodeID}:
    get:
      description: Get an email OTP only one time after confirmed
      operationId: EmailCodeGet
      parameters:
      - description: ID of email OTP
        explode: false
        in: path
        name: emailCodeID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailCodeGetRsp'
          description: Contains details of an email OTP
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Email OTP
      x-eov-operation-handler: controllers/EmailOTPController
  /v1/validate/phoneNumber:
    put:
      description: Validates phone number
      operationId: ValidatePhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validatePhoneNumberReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatePhoneNumberRsp'
          description: Phone number validated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Validation
      x-eov-operation-handler: controllers/ValidationController
  /v1/validate/email:
    put:
      description: Validates email
      operationId: ValidateEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateEmailReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateEmailRsp'
          description: Email validated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Validation
      x-eov-operation-handler: controllers/ValidationController
  /v1/requestLogs:
    get:
      description: Lists request logs for given filters
      operationId: RequestLogsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestLogsListRsp'
          description: Request logs successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Request logs
      x-eov-operation-handler: controllers/RequestLogsController
  /v1/requestLogs/{requestID}:
    get:
      description: "Retrieves request log entry by ID. If multiple requests with the\
        \ same ID are found, the most recent one is returned"
      operationId: RequestLogGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: ID of request
        explode: false
        in: path
        name: requestID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestLogGetRsp'
          description: Request log successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Request logs
      x-eov-operation-handler: controllers/RequestLogsController
  /v1/webhookLogs:
    get:
      description: Lists webhook logs for given filters
      operationId: WebhookLogsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhookLogsListRsp'
          description: Webhook logs successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Webhook logs
      x-eov-operation-handler: controllers/WebhookLogsController
  /v1/users:
    get:
      description: Lists project users
      operationId: UserList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userListRsp'
          description: Users successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
    post:
      description: Creates a new user
      operationId: UserCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userCreateRsp'
          description: User successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}:
    delete:
      description: Deletes a user
      operationId: UserDelete
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userDeleteReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
    get:
      description: Get a user by ID
      operationId: UserGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userGetRsp'
          description: User successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
    put:
      description: Updates a user
      operationId: UserUpdate
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userUpdateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userUpdateRsp'
          description: User successfully updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/stats:
    get:
      description: Provides aggregated user stats for project
      operationId: UserStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userStatsListRsp'
          description: Contains a list of all aggregated statistics for user data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/emails:
    post:
      description: Add an email to an existing user
      operationId: UserEmailCreate
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEmailCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userEmailCreateRsp'
          description: User email found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/emails/{emailID}:
    delete:
      description: Delete a user's email
      operationId: UserEmailDelete
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of email
        explode: false
        in: path
        name: emailID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEmailDeleteReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
    get:
      description: Get a user's email
      operationId: UserEmailGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of email
        explode: false
        in: path
        name: emailID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userEmailGetRsp'
          description: User email successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/phoneNumbers:
    post:
      description: Add a phone number to an existing user
      operationId: UserPhoneNumberCreate
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPhoneNumberCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userPhoneNumberCreateRsp'
          description: User phone number successfully added
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/phoneNumbers/{phoneNumberID}:
    delete:
      description: Delete a user's phone number
      operationId: UserPhoneNumberDelete
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of phone number
        explode: false
        in: path
        name: phoneNumberID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPhoneNumberDeleteReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
    get:
      description: Get a user's phone number
      operationId: UserPhoneNumberGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of phone number
        explode: false
        in: path
        name: phoneNumberID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userPhoneNumberGetRsp'
          description: User phone number found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/customLoginIdentifiers:
    post:
      description: Add a custom login identifier to an existing user
      operationId: UserCustomLoginIdentifierCreate
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCustomLoginIdentifierCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userCustomLoginIdentifierCreateRsp'
          description: User custom login identifier created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/customLoginIdentifiers/{customLoginIdentifierID}:
    delete:
      description: Delete a user's custom login identifier
      operationId: UserCustomLoginIdentifierDelete
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of custom login identifier
        explode: false
        in: path
        name: customLoginIdentifierID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCustomLoginIdentifierDeleteReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
    get:
      description: Get a user's custom login identifier
      operationId: UserCustomLoginIdentifierGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of custom login identifier
        explode: false
        in: path
        name: customLoginIdentifierID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userCustomLoginIdentifierGetRsp'
          description: User custom login identifier successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/devices:
    get:
      description: Provides all register devices for given user
      operationId: UserDeviceList
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userDeviceListRsp'
          description: Contains a list of all devices
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - User
      x-eov-operation-handler: controllers/UserController
  /v1/users/{userID}/credentials/{credentialID}:
    delete:
      description: Delete credential
      operationId: WebAuthnCredentialDelete
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of credential
        explode: false
        in: path
        name: credentialID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/register/start:
    post:
      description: Starts registration of a user for Passkeys (Biometrics)
      operationId: WebAuthnRegisterStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnRegisterStartReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnRegisterStartRsp'
          description: Passkeys (Biometrics) registration initiated successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/register/finish:
    post:
      description: Completes registration of a user for Passkeys (Biometrics)
      operationId: WebAuthnRegisterFinish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnFinishReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnRegisterFinishRsp'
          description: Passkeys (Biometrics) authentication finished successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/credential:
    get:
      description: Lists webauthn credentials users
      operationId: WebAuthnCredentialList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnCredentialListRsp'
          description: Webauthn credential list successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/credential/exists:
    post:
      description: Checks if active webauthn credential exists for provided user and
        device
      operationId: WebAuthnCredentialExists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnCredentialExistsReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnCredentialExistsRsp'
          description: Passkeys (Biometrics) credentials check completed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/credential/{credentialID}:
    put:
      description: Update credential
      operationId: WebAuthnCredentialUpdate
      parameters:
      - description: ID of credential
        explode: false
        in: path
        name: credentialID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnCredentialReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnCredentialRsp'
          description: Passkeys (Biometrics) authentication started successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/authenticator/{authenticatorID}:
    put:
      description: Update authenticator
      operationId: WebAuthnAuthenticatorUpdate
      parameters:
      - description: ID of authenticator
        explode: false
        in: path
        name: authenticatorID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnAuthenticatorUpdateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/authenticate/start:
    post:
      description: Starts authentication of a user for Passkeys (Biometrics)
      operationId: WebAuthnAuthenticateStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnAuthenticateStartReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnAuthenticateStartRsp'
          description: Passkeys (Biometrics) authentication started successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/authenticate/finish:
    post:
      description: Completes authentication of a user for Passkeys (Biometrics)
      operationId: WebAuthnAuthenticateFinish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnFinishReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnAuthenticateFinishRsp'
          description: Passkeys (Biometrics) authentication finished successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/mediation/start:
    post:
      description: Starts mediation for Passkeys (Biometrics)
      operationId: WebAuthnMediationStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnMediationStartReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnMediationStartRsp'
          description: Passkeys (Biometrics) mediation started successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/associate/start:
    post:
      description: Starts association token flow for Passkeys (Biometrics)
      operationId: WebAuthnAssociateStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webAuthnAssociateStartReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnAssociateStartRsp'
          description: Passkeys (Biometrics) association started successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/settings:
    get:
      description: Lists all settings for Passkeys (Biometrics)
      operationId: WebAuthnSettingList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webauthnSettingListRsp'
          description: Contains a list of all Passkeys (Biometrics) settings
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
    post:
      description: Creates a new setting for Passkeys (Biometrics)
      operationId: WebAuthnSettingCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webauthnSettingCreateReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webauthnSettingCreateRsp'
          description: Passkeys (Biometrics) setting successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/webauthn/settings/{settingID}:
    delete:
      description: Deletes a setting by id for Passkeys (Biometrics)
      operationId: WebAuthnSettingDelete
      parameters:
      - description: ID from create
        example: pwa-abc123
        explode: false
        in: path
        name: settingID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webauthnSettingDeleteReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
    get:
      description: Gets a setting by id for Passkeys (Biometrics)
      operationId: WebAuthnSettingGet
      parameters:
      - description: ID from create
        example: pwa-abc123
        explode: false
        in: path
        name: settingID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webauthnSettingGetRsp'
          description: Contains a Passkeys (Biometrics) setting
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
    put:
      description: Updates a setting by id for Passkeys (Biometrics)
      operationId: WebAuthnSettingPut
      parameters:
      - description: ID from create
        example: pwa-abc123
        explode: false
        in: path
        name: settingID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webauthnSettingUpdateReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webauthnSettingUpdateRsp'
          description: Contains a Passkeys (Biometrics) setting
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Passkeys (Biometrics)
      x-eov-operation-handler: controllers/PasskeysBiometricsController
  /v1/tracking:
    get:
      description: Provides project's passkeys raw tracking data per visitor
      operationId: TrackingAllRequest
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingRawListRsp'
          description: Contains a list of raw tracking data per vistor
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/stats:
    get:
      description: Provides aggregated statstics for project's passkeys tracking data
      operationId: TrackingStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingStatsListRsp'
          description: Contains a list of all aggregated statistics for tracking data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/stats/detailed:
    get:
      description: Provides detailed tracking data
      operationId: TrackingDetailedStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingDetailedStatsListRsp'
          description: Contains a list of all tracking data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/browser/stats:
    get:
      description: Provides browser tracking data
      operationId: TrackingBrowserStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingBrowserStatsListRsp'
          description: Contains a list of aggregated browser tracking data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/browser/stats/detailed:
    get:
      description: Provides detailed browser tracking data
      operationId: TrackingBrowserDetailedStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingBrowserDetailedStatsListRsp'
          description: Contains a list of all browser tracking data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/os/stats:
    get:
      description: Provides os tracking data
      operationId: TrackingOSStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingOSStatsListRsp'
          description: Contains a list of aggregated OS tracking data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/os/stats/detailed:
    get:
      description: Provides detailed OS tracking data
      operationId: TrackingOSDetailedStatsList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: Data granularity
        explode: true
        in: query
        name: granularity
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingOSDetailedStatsListRsp'
          description: Contains a list of all OS tracking data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/enums:
    get:
      description: Provides tracking enum values
      operationId: TrackingEnumsGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingEnumsGetRsp'
          description: Contains tracking enum values
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/tracking/backupState:
    get:
      description: Provides tracking credential backup state data
      operationId: TrackingBackupStateGet
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingBackupStateGetRsp'
          description: Contains tracking credential backup state data
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Analyzer
      x-eov-operation-handler: controllers/AnalyzerController
  /v1/projectConfig:
    get:
      description: Retrieves project config by projectID inferred from authentication
      operationId: ProjectConfigGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectConfigGetRsp'
          description: Project config successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Project config
      x-eov-operation-handler: controllers/ProjectConfigController
    post:
      description: Saves project config
      operationId: ProjectConfigSave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectConfigSaveReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Project config successfully saved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Project config
      x-eov-operation-handler: controllers/ProjectConfigController
  /v1/projectConfig/testWebhook:
    put:
      description: Tests webhook backend
      operationId: ProjectConfigWebhookTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectConfigWebhookTestReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectConfigWebhookTestRsp'
          description: Validation result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Project config
      x-eov-operation-handler: controllers/ProjectConfigController
  /v1/emailTemplates:
    post:
      description: Creates a new email template
      operationId: EmailTemplateCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailTemplateCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailTemplateCreateRsp'
          description: Email template successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      tags:
      - Email templates
      x-eov-operation-handler: controllers/EmailTemplatesController
  /v1/emailTemplates/{emailTemplateID}:
    delete:
      description: Deletes an email template
      operationId: EmailTemplateDelete
      parameters:
      - description: ID of email template
        explode: false
        in: path
        name: emailTemplateID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailTemplateDeleteReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      tags:
      - Email templates
      x-eov-operation-handler: controllers/EmailTemplatesController
  /v1/examples/{fileName}:
    get:
      description: Retrieves file containing the named example project
      operationId: ExampleGet
      parameters:
      - description: Name of the example to get
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          enum:
          - webcomponent-php-symfony.zip
          - webcomponent-php-symfony.tar.gz
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exampleGetRsp'
          description: Example project successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Examples
      x-eov-operation-handler: controllers/ExamplesController
  /v1/smsTemplates:
    post:
      description: Creates a new SMS template
      operationId: SmsTemplateCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smsTemplateCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smsTemplateCreateRsp'
          description: SMS template successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      tags:
      - SMS templates
      x-eov-operation-handler: controllers/SMSTemplatesController
  /v1/smsTemplates/{smsTemplateID}:
    delete:
      description: Deletes an SMS template
      operationId: SmsTemplateDelete
      parameters:
      - description: ID of SMS template
        explode: false
        in: path
        name: smsTemplateID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smsTemplateDeleteReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      tags:
      - SMS templates
      x-eov-operation-handler: controllers/SMSTemplatesController
  /v1/iosappconfig:
    get:
      description: Lists iOS App Configs for a project
      operationId: iOSAppConfigGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iOSAppConfigListRsp'
          description: iOS App Config List successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - iOS App Config
      x-eov-operation-handler: controllers/IOSAppConfigController
    post:
      description: Creates a new iOS App Config
      operationId: iOSAppConfigCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iOSAppConfigSaveReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iOSAppConfigSaveRsp'
          description: iOS App successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - iOS App Config
      x-eov-operation-handler: controllers/IOSAppConfigController
  /v1/iosappconfig/{iosAppConfigID}:
    delete:
      description: Deletes an iOS App Config
      operationId: iOSAppConfigDelete
      parameters:
      - description: iOS App Config ID from create
        example: ios-abc123
        explode: false
        in: path
        name: iosAppConfigID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iOSAppConfigDeleteReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - iOS App Config
      x-eov-operation-handler: controllers/IOSAppConfigController
    put:
      description: Updates an iOS app config by id
      operationId: IOSAppConfigPut
      parameters:
      - description: ID from iOS config create
        example: ios-abc123
        explode: false
        in: path
        name: iosAppConfigID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iOSAppConfigUpdateReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iOSAppConfigUpdateRsp'
          description: Contains iOS app config
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - iOS App Config
      x-eov-operation-handler: controllers/IOSAppConfigController
  /v1/androidappconfig:
    get:
      description: Lists Android App Configurations for a project
      operationId: AndroidAppConfigGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/androidAppConfigListRsp'
          description: Android App Config List successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Android App Config
      x-eov-operation-handler: controllers/AndroidAppConfigController
    post:
      description: Creates a new Android App Configuration
      operationId: AndroidAppConfigCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/androidAppConfigSaveReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/androidAppConfigSaveRsp'
          description: Android App Config successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Android App Config
      x-eov-operation-handler: controllers/AndroidAppConfigController
  /v1/androidappconfig/{androidAppConfigID}:
    delete:
      description: Deletes an Android App Config
      operationId: AndroidAppConfigDelete
      parameters:
      - description: Android App Config ID from create
        example: and-abc123
        explode: false
        in: path
        name: androidAppConfigID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/androidAppConfigDeleteReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Android App Config
      x-eov-operation-handler: controllers/AndroidAppConfigController
    put:
      description: Updates an Android app config by id
      operationId: AndroidAppConfigPut
      parameters:
      - description: ID from Android config create
        example: and-abc123
        explode: false
        in: path
        name: androidAppConfigID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/androidAppConfigUpdateReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/androidAppConfigUpdateRsp'
          description: Contains Android app config
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Android App Config
      x-eov-operation-handler: controllers/AndroidAppConfigController
  /v1/authTokens/validate:
    post:
      description: Validates auth token and returns attached user data
      operationId: AuthTokenValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authTokenValidateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authTokenValidateRsp'
          description: Auth token successfully validated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      tags:
      - Auth Tokens
      x-eov-operation-handler: controllers/AuthTokensController
  /v1/sessionConfig:
    get:
      description: Retrieves session config by projectID inferred from authentication
      operationId: SessionConfigGet
      parameters:
      - description: Application type
        explode: true
        in: query
        name: appType
        required: false
        schema:
          $ref: '#/components/schemas/appType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionConfigGetRsp'
          description: Session config successfully retrieved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Session config
      x-eov-operation-handler: controllers/SessionConfigController
    put:
      description: Updates session config
      operationId: SessionConfigUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessionConfigUpdateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Session config successfully saved
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      - bearerAuth: []
      tags:
      - Session config
      x-eov-operation-handler: controllers/SessionConfigController
  /v1/longSessions:
    get:
      description: Lists long sessions by provided filters
      operationId: LongSessionList
      parameters:
      - description: Client's remote address
        explode: true
        in: query
        name: remoteAddress
        required: false
        schema:
          type: string
        style: form
      - description: Client's user agent
        explode: true
        in: query
        name: userAgent
        required: false
        schema:
          type: string
        style: form
      - description: Field sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Field filtering
        examples:
          filterEmail:
            summary: Filter for one email address
            value:
            - name:eq:mail@exammple.com
          filterTimepoint:
            summary: timePoint after 20/07/2021
            value:
            - timePoint:gt:2021-07-20T00:00:00
        explode: true
        in: query
        name: "filter[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/longSessionListRsp'
          description: Contains a list of long sessions
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Long sessions
      x-eov-operation-handler: controllers/LongSessionsController
  /v1/longSessions/{sessionID}:
    get:
      description: Get a long session by sessionID
      operationId: LongSessionGet
      parameters:
      - description: ID of session
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          maxLength: 30
          minLength: 30
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/longSessionGetRsp'
          description: Contains details of a long session
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Long sessions
      x-eov-operation-handler: controllers/LongSessionsController
  /v1/longSessions/{sessionID}/revoke:
    put:
      description: Revokes an active long session by sessionID
      operationId: LongSessionRevoke
      parameters:
      - description: ID of session
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          maxLength: 30
          minLength: 30
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/longSessionRevokeReq'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericRsp'
          description: Operation succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - basicAuth: []
      tags:
      - Long sessions
      x-eov-operation-handler: controllers/LongSessionsController
  /v1/associationTokens:
    post:
      description: Creates a new association token
      operationId: AssociationTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/associationTokenCreateReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/associationTokenCreateRsp'
          description: Association token successfully created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorRsp'
          description: Error
      security:
      - projectID: []
      - bearerAuth: []
      - basicAuth: []
      tags:
      - Association Tokens
      x-eov-operation-handler: controllers/AssociationTokensController
components:
  parameters:
    emailLinkID:
      description: ID of email magic link
      explode: false
      in: path
      name: emailLinkID
      required: true
      schema:
        type: string
      style: simple
    emailCodeID:
      description: ID of email OTP
      explode: false
      in: path
      name: emailCodeID
      required: true
      schema:
        type: string
      style: simple
    smsCodeID:
      description: ID of SMS OTP
      explode: false
      in: path
      name: smsCodeID
      required: true
      schema:
        type: string
      style: simple
    requestID:
      description: ID of request
      explode: false
      in: path
      name: requestID
      required: true
      schema:
        type: string
      style: simple
    remoteAddress:
      description: Client's remote address
      explode: true
      in: query
      name: remoteAddress
      required: false
      schema:
        type: string
      style: form
    userAgent:
      description: Client's user agent
      explode: true
      in: query
      name: userAgent
      required: false
      schema:
        type: string
      style: form
    userID:
      description: ID of user
      explode: false
      in: path
      name: userID
      required: true
      schema:
        type: string
      style: simple
    emailID:
      description: ID of email
      explode: false
      in: path
      name: emailID
      required: true
      schema:
        type: string
      style: simple
    phoneNumberID:
      description: ID of phone number
      explode: false
      in: path
      name: phoneNumberID
      required: true
      schema:
        type: string
      style: simple
    customLoginIdentifierID:
      description: ID of custom login identifier
      explode: false
      in: path
      name: customLoginIdentifierID
      required: true
      schema:
        type: string
      style: simple
    emailTemplateID:
      description: ID of email template
      explode: false
      in: path
      name: emailTemplateID
      required: true
      schema:
        type: string
      style: simple
    smsTemplateID:
      description: ID of SMS template
      explode: false
      in: path
      name: smsTemplateID
      required: true
      schema:
        type: string
      style: simple
    granularity:
      description: Data granularity
      explode: true
      in: query
      name: granularity
      required: true
      schema:
        type: string
      style: form
    appType:
      description: Application type
      explode: true
      in: query
      name: appType
      required: false
      schema:
        $ref: '#/components/schemas/appType'
      style: form
    sort:
      description: Field sorting
      explode: true
      in: query
      name: sort
      required: false
      schema:
        type: string
      style: form
    filter:
      description: Field filtering
      examples:
        filterEmail:
          summary: Filter for one email address
          value:
          - name:eq:mail@exammple.com
        filterTimepoint:
          summary: timePoint after 20/07/2021
          value:
          - timePoint:gt:2021-07-20T00:00:00
      explode: true
      in: query
      name: "filter[]"
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    page:
      description: Page number
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        type: integer
      style: form
    pageSize:
      description: Number of items per page
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        default: 10
        type: integer
      style: form
    sessionID:
      description: ID of session
      explode: false
      in: path
      name: sessionID
      required: true
      schema:
        maxLength: 30
        minLength: 30
        type: string
      style: simple
  responses:
    "200":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/genericRsp'
      description: Operation succeeded
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorRsp'
      description: Error
  schemas:
    webhookID:
      description: Unique ID of webhook request which will be randomly generated on
        server side
      example: Zwho-557...663
      type: string
    projectSecretCreateReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    projectSecretCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/projectSecretItem'
    projectSecretListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/projectSecretItem'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - paging
        - rows
        type: object
    projectSecretDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    projectSecretItem:
      properties:
        id:
          description: ID of project secret
          example: pse-abc123
          type: string
        secret:
          description: Server-side generated secret. Only filled on create
          example: asdasd!§"8787.!
          type: string
        hint:
          description: Hint of the server-side generated secret. First 3 characters
            and last 3 characters
          example: asd....7.!
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
      required:
      - created
      - hint
      - id
      type: object
    authMethodsListReq:
      properties:
        username:
          description: Client's username
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - username
      type: object
    authMethodsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/authMethodsListRsp_allOf_data'
        required:
        - data
        type: object
    userAuthLogListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userAuthLogListRsp_allOf_data'
        required:
        - data
        type: object
    userAuthLog:
      properties:
        userID:
          description: ID of the user
          type: string
        userName:
          type: string
        method:
          type: string
        eventType:
          type: string
        status:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
      required:
      - created
      - eventType
      - method
      - status
      - userID
      - userName
      type: object
    exampleGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            description: Base64 encoded data containing the compressed example file
            type: string
          extension:
            description: The extension of the compressed example file
            enum:
            - zip
            - tar.gz
            type: string
        required:
        - data
        - extension
        type: object
    smsCodeSendReq:
      properties:
        phoneNumber:
          description: Recipient phone number
          example: "017612345678"
          type: string
        create:
          description: Defines if user phone number should be created if not found
          type: boolean
        userFullName:
          description: Optional user's full name to be used if the user wasn't found
            and needs to be created first
          type: string
        templateName:
          description: Template name of SMS to send
          example: "true"
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - create
      - phoneNumber
      type: object
    smsCodeSendRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/smsCodeSendRsp_allOf_data'
        required:
        - data
        type: object
    smsCodeValidateReq:
      properties:
        smsCode:
          description: SMS OTP to validate
          example: "123456"
          type: string
        createLoginToken:
          type: boolean
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - smsCode
      type: object
    smsCodeValidateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          loginToken:
            type: string
        type: object
    emailLinkSendReq:
      properties:
        email:
          description: Recipient email address
          example: example@mail.com
          type: string
        create:
          description: Defines if user email should be created if not found
          type: boolean
        tokenLifetime:
          description: Defines the lifetime of the token that needs to be validated
          example: 5m
          type: string
        userFullName:
          description: Optional user's full name to be used if the user wasn't found
            and needs to be created first
          type: string
        templateName:
          description: Template name of email to send
          example: email_login_user
          type: string
        purpose:
          default: authentication
          description: Purpose of the email link
          enum:
          - authentication
          - confirmation
          - invitation
          type: string
        redirect:
          description: Redirect target after user clicks on email magic link
          format: uri
          type: string
        additionalPayload:
          description: Additional payload in JSON format
          example: "{\"projectAbbreviation\":\"CRBD\"}"
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - create
      - email
      - redirect
      type: object
    emailLinkSendRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/emailLinkSendRsp_allOf_data'
        required:
        - data
        type: object
    emailLinksValidateReq:
      properties:
        token:
          description: Token to validate
          example: fFw...Akl
          type: string
        createLoginToken:
          type: boolean
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - token
      type: object
    emailLinkGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/emailLinkGetRsp_allOf_data'
        required:
        - data
        type: object
    emailLinkValidateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          additionalPayload:
            $ref: '#/components/schemas/additionalPayload'
          userID:
            $ref: '#/components/schemas/userID'
          userFullName:
            type: string
          userEmail:
            type: string
          loginToken:
            type: string
        required:
        - userEmail
        - userFullName
        - userID
        type: object
    emailLinksDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - requestID
      type: object
    emailLink:
      properties:
        ID:
          description: ID of the email magic link
          type: string
        userID:
          description: ID of the user
          type: string
        email:
          type: string
        userFullName:
          type: string
        purpose:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          description: status values of an email link
          enum:
          - active
          - confirmed
          type: string
        additionalPayload:
          description: Additional payload in JSON format
          example: "{\"projectAbbreviation\":\"CRBD\"}"
          type: string
      required:
      - ID
      - additionalPayload
      - created
      - email
      - status
      - updated
      - userID
      type: object
    emailCodeSendReq:
      properties:
        email:
          description: Recipient email address
          example: example@mail.com
          type: string
        create:
          description: Defines if user email should be created if not found
          type: boolean
        tokenLifetime:
          description: Defines the lifetime of the token that needs to be validated
          example: 5m
          type: string
        userFullName:
          description: Optional user's full name to be used if the user wasn't found
            and needs to be created first
          type: string
        templateName:
          description: Template name of email to send
          example: email_login_user
          type: string
        additionalPayload:
          description: Additional payload in JSON format
          example: "{\"projectAbbreviation\":\"CRBD\"}"
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - create
      - email
      type: object
    emailCodeSendRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/emailCodeSendRsp_allOf_data'
        required:
        - data
        type: object
    emailCodeValidateReq:
      properties:
        code:
          description: Email OTP to validate
          example: "123456"
          type: string
        createLoginToken:
          type: boolean
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - code
      type: object
    emailCodeValidateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          additionalPayload:
            $ref: '#/components/schemas/additionalPayload'
          userID:
            $ref: '#/components/schemas/userID'
          userFullName:
            type: string
          userEmail:
            type: string
          loginToken:
            type: string
        required:
        - userEmail
        - userFullName
        - userID
        type: object
    emailCodeGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/emailCodeGetRsp_allOf_data'
        required:
        - data
        type: object
    emailCode:
      properties:
        ID:
          description: ID of the email OTP
          type: string
        userID:
          description: ID of the user
          type: string
        email:
          type: string
        userFullName:
          type: string
        additionalPayload:
          description: Additional payload in JSON format
          example: "{\"projectAbbreviation\":\"CRBD\"}"
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          description: status values of an email OTP
          enum:
          - active
          - confirmed
          type: string
      required:
      - ID
      - additionalPayload
      - created
      - email
      - status
      - updated
      - userID
      type: object
    validatePhoneNumberReq:
      properties:
        regionCode:
          description: ISO country or region code
          type: string
        phoneNumber:
          description: Phone number to validate
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - phoneNumber
      type: object
    validatePhoneNumberRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/phoneNumberValidationResult'
        required:
        - data
        type: object
    phoneNumberValidationResult:
      properties:
        isValid:
          type: boolean
        validationCode:
          enum:
          - valid
          - invalid_country_code
          - invalid_number
          - too_long
          type: string
        phoneNumber:
          $ref: '#/components/schemas/validationPhoneNumber'
      required:
      - isValid
      - validationCode
      type: object
    validationPhoneNumber:
      properties:
        nationalNumber:
          type: integer
        countryCode:
          type: integer
        regionCode:
          type: string
        nationalFormatted:
          type: string
        internationalFormatted:
          type: string
      required:
      - countryCode
      - internationalFormatted
      - nationalFormatted
      - nationalNumber
      - regionCode
      type: object
    validateEmailReq:
      properties:
        email:
          description: Email to validate
          type: string
        smtpCheck:
          description: perform SMTP check for domain
          type: boolean
        suggestDomain:
          description: enables domain suggestion for misspelled domains
          type: boolean
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - email
      type: object
    validateEmailRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/emailValidationResult'
        required:
        - data
        type: object
    emailValidationResult:
      properties:
        isValid:
          type: boolean
        validationCode:
          enum:
          - valid
          - invalid_syntax
          - no_such_host
          - not_allowed
          - unknown
          type: string
        suggestion:
          type: string
        email:
          $ref: '#/components/schemas/validationEmail'
      required:
      - isValid
      - validationCode
      type: object
    validationEmail:
      properties:
        username:
          type: string
        domain:
          type: string
        reachable:
          type: string
        disposable:
          type: boolean
        free:
          type: boolean
        hasMxRecords:
          type: boolean
      required:
      - disposable
      - domain
      - free
      - hasMxRecords
      - reachable
      - username
      type: object
    userCreateReq:
      properties:
        name:
          type: string
        fullName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - name
      type: object
    userCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userCreateRsp_allOf_data'
        required:
        - data
        type: object
    userGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/fullUser'
        required:
        - data
        type: object
    userListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userListRsp_allOf_data'
        required:
        - data
        type: object
    userStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userStatsListRsp_allOf_data'
        required:
        - data
        type: object
    userStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        totalUsers:
          type: integer
        signUps:
          type: integer
        activeUsers:
          type: integer
        countPasskeyLogin:
          type: integer
        countEmailLogin:
          type: integer
        countPasswordLogin:
          type: integer
        successfulLogins:
          type: integer
        failedLogins:
          type: integer
      required:
      - activeUsers
      - countEmailLogin
      - countPasskeyLogin
      - countPasswordLogin
      - failedLogins
      - signUps
      - successfulLogins
      - timePoint
      - totalUsers
      type: object
    userDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    userUpdateReq:
      properties:
        name:
          type: string
        fullName:
          type: string
        status:
          enum:
          - active
          - disabled
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    userUpdateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/user'
        required:
        - data
        type: object
    user:
      description: User entry
      properties:
        ID:
          description: ID of the user
          type: string
        name:
          type: string
        fullName:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          type: string
      required:
      - ID
      - created
      - fullName
      - name
      - status
      - updated
      type: object
    userEmailCreateReq:
      properties:
        email:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - email
      type: object
    userEmailCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userEmailCreateRsp_allOf_data'
        required:
        - data
        type: object
    userEmailGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userEmailGetRsp_allOf_data'
        required:
        - data
        type: object
    userEmailDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    email:
      properties:
        ID:
          description: ID of the email
          type: string
        email:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        deleted:
          description: Timestamp of when the entity was deleted in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          $ref: '#/components/schemas/status'
      required:
      - ID
      - created
      - email
      - status
      - updated
      type: object
    userPhoneNumberCreateReq:
      properties:
        phoneNumber:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - phoneNumber
      type: object
    userPhoneNumberCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userPhoneNumberCreateRsp_allOf_data'
        required:
        - data
        type: object
    userPhoneNumberGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userPhoneNumberGetRsp_allOf_data'
        required:
        - data
        type: object
    userPhoneNumberDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    phoneNumber:
      properties:
        ID:
          description: ID of the phone number
          type: string
        phoneNumber:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          $ref: '#/components/schemas/status'
      required:
      - ID
      - created
      - phoneNumber
      - status
      - updated
      type: object
    userCustomLoginIdentifierCreateReq:
      properties:
        customLoginIdentifier:
          type: string
        additionalData:
          example: "{\"key\":\"value\"}"
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - customLoginIdentifier
      type: object
    userCustomLoginIdentifierCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userCustomLoginIdentifierCreateRsp_allOf_data'
        required:
        - data
        type: object
    userCustomLoginIdentifierGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/userCustomLoginIdentifierGetRsp_allOf_data'
        required:
        - data
        type: object
    userCustomLoginIdentifierDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    customLoginIdentifier:
      properties:
        ID:
          description: ID of the phone number
          type: string
        identifier:
          type: string
        additionalData:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
      required:
      - ID
      - created
      - identifier
      - updated
      type: object
    userDeviceListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          devices:
            items:
              $ref: '#/components/schemas/userDevice'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - devices
        - paging
        type: object
    userDevice:
      properties:
        name:
          type: string
        fingerprint:
          type: string
        status:
          type: string
        device:
          type: string
        created:
          type: string
        browserName:
          type: string
        browserVersion:
          type: string
        osName:
          type: string
        osVersion:
          type: string
      required:
      - browserName
      - browserVersion
      - created
      - device
      - fingerprint
      - name
      - osName
      - osVersion
      - status
      type: object
    requestLog:
      description: Request log entry
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        projectID:
          description: ID of project
          type: string
        userID:
          description: ID of the user
          type: string
        application:
          description: Application this request was processed with
          type: string
        method:
          description: HTTP method (such as GET and POST)
          type: string
        endpoint:
          description: Endpoint that was requested
          type: string
        source:
          description: Request source
          type: string
        request:
          description: Request JSON data
          type: string
        requestHeaders:
          additionalProperties:
            type: string
          description: Request headers
          type: object
        queryParams:
          description: Request query parameters
          type: string
        responseStatus:
          description: Response HTTP status
          type: number
        response:
          description: Response JSON data
          type: string
        runtime:
          description: Runtime in seconds for this request
          format: float
          type: number
        remoteAddress:
          description: Caller remote address
          type: string
        created:
          description: Timestamp of when the request was performed in RFC3339 format
          type: string
        tags:
          description: Arbitrary tags attached to this request
          type: object
        details:
          description: "Any freetext additional information attached to this request.\
            \ Additional logs, errors, etc."
          items:
            type: string
          type: array
      required:
      - application
      - created
      - details
      - endpoint
      - method
      - projectID
      - queryParams
      - remoteAddress
      - request
      - requestHeaders
      - requestID
      - response
      - responseStatus
      - runtime
      - source
      - tags
      - userID
      type: object
    requestLogsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/requestLogsListRsp_allOf_data'
        required:
        - data
        type: object
    requestLogGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/requestLog'
        required:
        - data
        type: object
    webhookLog:
      description: Webhook log entry
      properties:
        webhookID:
          description: Unique ID of webhook request which will be randomly generated
            on server side
          example: Zwho-557...663
          type: string
        projectID:
          description: ID of project
          type: string
        action:
          description: Webhook action
          example: passwordVerify
          type: string
        responseID:
          description: |
            Unique ID of response, you can provide your own while responding to the webhook, if not the ID will be randomly generated on server side.
            This has the same meaning as overriding requestID for API requests.
          type: string
        requestURL:
          description: Absolute request URL of webhook backend
          type: string
        requestBody:
          description: Request contents that were sent to webhook backend
          type: string
        responseStatus:
          description: Response HTTP status that was returned by webhook backend
          type: integer
        responseHeaders:
          description: Response HTTP headers that were returned by webhook backend
          type: object
        responseBody:
          description: Response body JSON data that was returned by webhook backend
          type: string
        responseError:
          description: Response error if present
          type: string
        runtime:
          description: Runtime in seconds for this request
          format: float
          type: number
        created:
          description: Timestamp of when the request was performed in RFC3339 format
          type: string
      required:
      - action
      - created
      - projectID
      - requestBody
      - requestURL
      - responseBody
      - responseError
      - responseHeaders
      - responseID
      - responseStatus
      - runtime
      - webhookID
      type: object
    webhookLogsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/webhookLogsListRsp_allOf_data'
        required:
        - data
        type: object
    webAuthnRegisterStartReq:
      properties:
        username:
          example: example@mail.com
          type: string
        userFullName:
          description: Optional user's full name to be used if the user wasn't found
            and needs to be created first
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
        credentialStatus:
          default: pending
          description: Sets credential status into active and pending. Pending status
            dont allow a login until the credential gets confirmed by an api call.
          enum:
          - active
          - pending
          type: string
      required:
      - clientInfo
      - username
      type: object
    webAuthnRegisterStartRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          status:
            description: Status represents information if user signup was successful
              or the user with its credentials already exists
            enum:
            - success
            - duplicate
            type: string
          publicKeyCredentialCreationOptions:
            description: Contains JSON payload data to start Passkeys (Biometrics)
              sign up challenge
            example: "{\"publicKey\":{\"challenge\":\"2m6...0w9/MgW...KE=\",\"rp\"\
              :{\"name\":\"demo\",\"id\":\"localhost\"},\"user\":{\"name\":\"example@mail.com\"\
              ,\"id\":\"dXN...zk5\"},\"pubKeyCredParams\":[{\"type\":\"public-key\"\
              ,\"alg\":-7},{\"type\":\"public-key\",\"alg\":-35},{\"type\":\"public-key\"\
              ,\"alg\":-36},{\"type\":\"public-key\",\"alg\":-257},{\"type\":\"public-key\"\
              ,\"alg\":-258},{\"type\":\"public-key\",\"alg\":-259},{\"type\":\"public-key\"\
              ,\"alg\":-37},{\"type\":\"public-key\",\"alg\":-38},{\"type\":\"public-key\"\
              ,\"alg\":-39},{\"type\":\"public-key\",\"alg\":-8}],\"authenticatorSelection\"\
              :{\"authenticatorAttachment\":\"platform\",\"requireResidentKey\":false,\"\
              userVerification\":\"required\"},\"timeout\":60000,\"attestation\":\"\
              none\"}}"
            type: string
        required:
        - publicKeyCredentialCreationOptions
        - status
        type: object
    webAuthnRegisterFinishRsp:
      allOf:
      - $ref: '#/components/schemas/webAuthnAuthenticateSuccess'
      - properties:
          status:
            description: Status represents information if user sign up was successful
              or if the user with provided credentials already exists
            enum:
            - success
            - duplicate
            type: string
        required:
        - status
        type: object
    webAuthnAuthenticateStartReq:
      properties:
        username:
          example: example@mail.com
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - username
      type: object
    webAuthnAuthenticateStartRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          publicKeyCredentialRequestOptions:
            description: Contains JSON payload data to start Passkeys (Biometrics)
              login challenge
            example: "{\"publicKey\":{\"challenge\":\"MjQ...8s=\",\"timeout\":60000,\"\
              rpId\":\"localhost\",\"allowCredentials\":[{\"type\":\"public-key\"\
              ,\"id\":\"JM6.../Q=\"}],\"userVerification\":\"preferred\"}}"
            type: string
          status:
            description: Status represents information if authenticate start was successful
              or device is unknown
            enum:
            - success
            - unknownDevice
            - unconfirmedDevice
            type: string
        required:
        - publicKeyCredentialRequestOptions
        - status
        type: object
    webAuthnMediationStartReq:
      properties:
        username:
          description: Optional limits possible credentials matching to username
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      type: object
    webAuthnMediationStartRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          challenge:
            description: Contains JSON payload data to start Passkeys (Biometrics)
              login challenge
            example: "{\"publicKey\":{\"challenge\":\"MjQ...8s=\",\"timeout\":60000,\"\
              rpId\":\"localhost\",\"allowCredentials\":[{\"type\":\"public-key\"\
              ,\"id\":\"JM6.../Q=\"}],\"userVerification\":\"preferred\"}}"
            type: string
        required:
        - challenge
        type: object
    webAuthnAssociateStartReq:
      properties:
        associationToken:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - associationToken
      type: object
    webAuthnAssociateStartRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          status:
            description: Status represents information if user signup was successful
              or the user with its credentials already exists
            enum:
            - success
            - duplicate
            type: string
          publicKeyCredentialCreationOptions:
            description: Contains JSON payload data to start Passkeys (Biometrics)
              sign up challenge
            example: "{\"publicKey\":{\"challenge\":\"2m6...0w9/MgW...KE=\",\"rp\"\
              :{\"name\":\"demo\",\"id\":\"localhost\"},\"user\":{\"name\":\"example@mail.com\"\
              ,\"id\":\"dXN...zk5\"},\"pubKeyCredParams\":[{\"type\":\"public-key\"\
              ,\"alg\":-7},{\"type\":\"public-key\",\"alg\":-35},{\"type\":\"public-key\"\
              ,\"alg\":-36},{\"type\":\"public-key\",\"alg\":-257},{\"type\":\"public-key\"\
              ,\"alg\":-258},{\"type\":\"public-key\",\"alg\":-259},{\"type\":\"public-key\"\
              ,\"alg\":-37},{\"type\":\"public-key\",\"alg\":-38},{\"type\":\"public-key\"\
              ,\"alg\":-39},{\"type\":\"public-key\",\"alg\":-8}],\"authenticatorSelection\"\
              :{\"authenticatorAttachment\":\"platform\",\"requireResidentKey\":false,\"\
              userVerification\":\"required\"},\"timeout\":60000,\"attestation\":\"\
              none\"}}"
            type: string
        required:
        - publicKeyCredentialCreationOptions
        - status
        type: object
    webAuthnFinishReq:
      properties:
        publicKeyCredential:
          description: Contains JSON payload data for Passkeys (Biometrics) login
            finish challenge
          example: "{\"type\":\"public-key\",\"id\":\"JM6...J_Q\",\"rawId\":\"JM6...J_Q\"\
            ,\"authenticatorAttachment\":null,\"response\":{\"clientDataJSON\":\"\
            eyJ...ZX0\",\"authenticatorData\":\"SZY...AAQ\",\"signature\":\"Ni7...YAg\"\
            ,\"userHandle\":\"dXN...zk5\"},\"clientExtensionResults\":{}}"
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - publicKeyCredential
      type: object
    webAuthnAuthenticateFinishRsp:
      allOf:
      - $ref: '#/components/schemas/webAuthnAuthenticateSuccess'
      - properties:
          status:
            description: Status represents information if user signup was successful
              or the user with its credentials already exists
            enum:
            - success
            - unconfirmedCredential
            type: string
        required:
        - status
        type: object
    webAuthnAuthenticateSuccess:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          userID:
            $ref: '#/components/schemas/userID'
          username:
            description: Username of current challenge
            example: example@mail.com
            type: string
          credentialID:
            description: Used credential ID
            example: 139...935
            type: string
          userFullName:
            description: Optional user's full name to be used if the user wasn't found
              and needs to be created first
            type: string
        required:
        - credentialID
        - userID
        - username
        type: object
    webAuthnCredentialExistsReq:
      properties:
        loginIdentifier:
          type: string
        loginIdentifierType:
          $ref: '#/components/schemas/loginIdentifierType'
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - loginIdentifier
      - loginIdentifierType
      type: object
    webAuthnCredentialExistsRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          exists:
            type: boolean
        required:
        - exists
        type: object
    webAuthnCredentialReq:
      properties:
        status:
          enum:
          - pending
          - active
          - deleted
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - status
      type: object
    webAuthnAuthenticatorUpdateReq:
      properties:
        name:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - name
      type: object
    webAuthnCredentialRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          status:
            description: Status
            enum:
            - pending
            - active
            - deleted
            type: string
        required:
        - status
        type: object
    webAuthnCredentialListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/webAuthnCredentialItemRsp'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - paging
        - rows
        type: object
    webAuthnCredentialItemRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          id:
            description: Credential ID
            example: cre-12345
            type: string
          credentialHash:
            type: string
          aaguid:
            type: string
          attestationType:
            type: string
          backupState:
            description: Backup state
            type: boolean
          backupEligible:
            description: Backup eligible
            type: boolean
          transport:
            description: Transport
            items:
              enum:
              - usb
              - nfc
              - ble
              - internal
              - hybrid
              - smart-card
              type: string
            type: array
          status:
            description: Status
            enum:
            - pending
            - active
            type: string
          userAgent:
            description: User agent
            type: string
          created:
            $ref: '#/components/schemas/created'
          authenticatorID:
            description: Authenticator ID
            example: ath-12345
            type: string
          authenticatorName:
            type: string
          lastUsed:
            description: Timestamp of when the passkey was last used in yyyy-MM-dd'T'HH:mm:ss
              format
            type: string
          lastUsedDeviceName:
            type: string
        required:
        - aaguid
        - attestationType
        - authenticatorID
        - authenticatorName
        - backupEligible
        - backupStatus
        - created
        - credentialHash
        - id
        - lastUsed
        - lastUsedDeviceName
        - status
        - transport
        - userAgent
        type: object
    webauthnSettingListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/webauthnSettingItem'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - paging
        - rows
        type: object
    webauthnSettingItem:
      allOf:
      - $ref: '#/components/schemas/webauthnSettingCreate'
      - properties:
          id:
            description: ID of WebAuthn setting
            example: pwa-abc123
            type: string
          created:
            $ref: '#/components/schemas/created'
          updated:
            $ref: '#/components/schemas/updated'
        required:
        - created
        - id
        - updated
        type: object
    webauthnSettingCreate:
      properties:
        name:
          description: Name of this setting
          example: Prod. Developer Panel
          type: string
        origin:
          description: Define here either a url incl. schema or an android-apk-key-hash
          example: https://app.corbado.com:5012 or android-apk-key-hash:hsnvseDsd...
          type: string
      required:
      - name
      - origin
      type: object
    webauthnSettingCreateReq:
      allOf:
      - $ref: '#/components/schemas/webauthnSettingCreate'
      - properties:
          requestID:
            $ref: '#/components/schemas/requestID'
          clientInfo:
            $ref: '#/components/schemas/clientInfo'
        type: object
    webauthnSettingUpdateReq:
      allOf:
      - $ref: '#/components/schemas/webauthnSettingCreate'
      - properties:
          requestID:
            $ref: '#/components/schemas/requestID'
          clientInfo:
            $ref: '#/components/schemas/clientInfo'
        type: object
    webauthnSettingCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/webauthnSettingItem'
    webauthnSettingGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/webauthnSettingItem'
    webauthnSettingUpdateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/webauthnSettingItem'
    webauthnSettingDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
    trackingRawListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/trackingRawListRow'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - paging
        - rows
        type: object
    trackingRawListRow:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        hasWebauthn:
          type: boolean
        hasPlatformAuth:
          type: boolean
        hasConditionalUi:
          type: boolean
        osId:
          type: string
        browserId:
          type: string
      required:
      - browserId
      - hasConditionalUi
      - hasPlatformAuth
      - hasWebauthn
      - osId
      - timePoint
      type: object
    trackingStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingStatsListRsp_allOf_data'
        required:
        - data
        type: object
    trackingStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        aggregateVisits:
          type: integer
        aggregateWebauthn:
          type: integer
        aggregatePlatform:
          type: integer
        aggregateConditionalUi:
          type: integer
      required:
      - aggregateConditionalUi
      - aggregatePlatform
      - aggregateVisits
      - aggregateWebauthn
      - timePoint
      type: object
    trackingDetailedStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingDetailedStatsListRsp_allOf_data'
        required:
        - data
        type: object
    trackingDetailedStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        visits:
          example: 100
          type: integer
        webauthn:
          example: 100
          type: integer
        platform:
          example: 100
          type: integer
        conditionalUi:
          example: 100
          type: integer
      required:
      - conditionalUi
      - platform
      - timePoint
      - visits
      - webauthn
      type: object
    trackingOSStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingOSStatsListRsp_allOf_data'
        required:
        - data
        type: object
    trackingOSDetailedStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingOSDetailedStatsListRsp_allOf_data'
        required:
        - data
        type: object
    trackingOSStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        macos:
          example: 100
          type: integer
        windows:
          example: 100
          type: integer
        ios:
          example: 100
          type: integer
        android:
          example: 100
          type: integer
        other:
          example: 100
          type: integer
      required:
      - android
      - ios
      - macos
      - other
      - timePoint
      - windows
      type: object
    trackingOSDetailedStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        osName:
          example: iOS
          type: string
        osVersion:
          example: "15.6"
          type: string
        osPlatform:
          enum:
          - desktop
          - mobile
          - unknown
          type: string
        cnt:
          example: 100
          type: integer
        webauthn:
          example: 100
          type: integer
        platform:
          example: 100
          type: integer
        conditional_ui:
          example: 100
          type: integer
      required:
      - cnt
      - conditional_ui
      - osName
      - osPlatform
      - osVersion
      - platform
      - timePoint
      - webauthn
      type: object
    trackingBrowserStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingBrowserStatsListRsp_allOf_data'
        required:
        - data
        type: object
    trackingBrowserDetailedStatsListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingBrowserDetailedStatsListRsp_allOf_data'
        required:
        - data
        type: object
    trackingBrowserStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        chrome:
          example: 100
          type: integer
        safari:
          example: 100
          type: integer
        edge:
          example: 100
          type: integer
        firefox:
          example: 100
          type: integer
        other:
          example: 100
          type: integer
      required:
      - chrome
      - edge
      - firefox
      - other
      - safari
      - timePoint
      type: object
    trackingBrowserDetailedStats:
      properties:
        timePoint:
          format: yyyy-MM-dd
          type: string
        browserName:
          example: Chrome
          type: string
        browserVersion:
          example: "103"
          type: string
        cnt:
          example: 100
          type: integer
        webauthn:
          example: 100
          type: integer
        platform:
          example: 100
          type: integer
        conditional_ui:
          example: 100
          type: integer
      required:
      - browserName
      - browserVersion
      - cnt
      - conditional_ui
      - platform
      - timePoint
      - webauthn
      type: object
    trackingEnumsGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingEnums'
        required:
        - data
        type: object
    trackingEnums:
      properties:
        browserNames:
          items:
            type: string
          type: array
        osNames:
          items:
            type: string
          type: array
        osPlatforms:
          items:
            type: string
          type: array
      required:
      - browserNames
      - osNames
      - osPlatforms
      type: object
    trackingBackupStateGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/trackingBackupState'
        required:
        - data
        type: object
    trackingBackupState:
      properties:
        backedUp:
          type: integer
        notBackedUp:
          type: integer
      required:
      - backedUp
      - notBackedUp
      type: object
    iOSAppConfigSaveReq:
      properties:
        appIDPrefix:
          type: string
        bundleID:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - appIDPrefix
      - bundleID
      type: object
    iOSAppConfigSaveRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/iOSAppConfigItem'
    iOSAppConfigListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/iOSAppConfigItem'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - paging
        - rows
        type: object
    iOSAppConfigUpdateReq:
      properties:
        appIDPrefix:
          type: string
        bundleID:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - appIDPrefix
      - bundleID
      type: object
    iOSAppConfigUpdateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/iOSAppConfigItem'
    iOSAppConfigDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    iOSAppConfigItem:
      properties:
        id:
          description: ID of iOS app
          example: ios-abc123
          type: string
        projectID:
          description: ID of project
          type: string
        appIDPrefix:
          type: string
        bundleID:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
      required:
      - appIDPrefix
      - bundleID
      - created
      - id
      - projectID
      - updated
      type: object
    androidAppConfigSaveReq:
      properties:
        packageName:
          type: string
        fingerprint:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - fingerprint
      - packageName
      type: object
    androidAppConfigSaveRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/androidAppConfigItem'
    androidAppConfigListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/androidAppConfigItem'
            type: array
          paging:
            $ref: '#/components/schemas/paging'
        required:
        - paging
        - rows
        type: object
    androidAppConfigUpdateReq:
      properties:
        packageName:
          type: string
        fingerprint:
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - fingerprint
      - packageName
      type: object
    androidAppConfigUpdateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - $ref: '#/components/schemas/androidAppConfigItem'
    androidAppConfigDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    androidAppConfigItem:
      properties:
        id:
          description: ID of Android app configuration
          example: and-abc123
          type: string
        projectID:
          description: ID of project
          type: string
        packageName:
          type: string
        fingerprint:
          type: string
        base64URL:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
      required:
      - base64URL
      - created
      - fingerprint
      - id
      - packageName
      - projectID
      - updated
      type: object
    projectConfigSaveReq:
      properties:
        externalName:
          type: string
        appType:
          $ref: '#/components/schemas/appType'
        productKey:
          type: string
        emailFrom:
          type: string
        smsFrom:
          type: string
        externalApplicationProtocolVersion:
          description: Defines which version of webhook is used
          enum:
          - v1
          - v2
          type: string
        webhookURL:
          type: string
        webhookActions:
          items:
            type: string
          type: array
        webhookUsername:
          type: string
        webhookPassword:
          type: string
        webhookTestInvalidUsername:
          type: string
        webhookTestValidUsername:
          type: string
        webhookTestValidPassword:
          type: string
        externalApplicationUsername:
          type: string
        externalApplicationPassword:
          type: string
        legacyAuthMethodsUrl:
          type: string
        passwordVerifyUrl:
          type: string
        authSuccessRedirectUrl:
          type: string
        passwordResetUrl:
          type: string
        allowUserRegistration:
          type: boolean
        allowIPStickiness:
          type: boolean
        passkeyAppendInterval:
          enum:
          - 0d
          - 1d
          - 3d
          - 1w
          - 3w
          - 1m
          - 3m
          type: string
        fallbackLanguage:
          type: string
        autoDetectLanguage:
          type: boolean
        integrationModeHosted:
          type: boolean
        integrationModeAPI:
          type: boolean
        integrationModeWebComponent:
          type: boolean
        hasExistingUsers:
          type: boolean
        hasVerifiedSession:
          type: boolean
        hasGeneratedSession:
          type: boolean
        hasStartedUsingPasskeys:
          type: boolean
        hasStartedUsingSessions:
          type: boolean
        applicationUrl:
          type: string
        useCli:
          type: boolean
        doubleOptIn:
          type: boolean
        userFullNameRequired:
          type: boolean
        webauthnRPID:
          type: string
        domain:
          type: string
        environment:
          enum:
          - dev
          - prod
          type: string
        frontendFramework:
          enum:
          - react
          - vuejs
          - vanillajs
          type: string
        backendLanguage:
          enum:
          - javascript
          - php
          - go
          type: string
        webComponentDebug:
          type: boolean
        smtpUseCustom:
          type: boolean
        smtpHost:
          type: string
        smtpPort:
          type: integer
        smtpUsername:
          type: string
        smtpPassword:
          type: string
        supportEmail:
          type: string
        signupFlow:
          enum:
          - PasskeyWithEmailOTPFallback
          - EmailOTPSignup
          type: string
        signupFlowOptions:
          type: object
        loginFlow:
          enum:
          - PasskeyWithEmailOTPFallback
          type: string
        loginFlowOptions:
          type: object
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    projectConfigGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/projectConfig'
        required:
        - data
        type: object
    projectConfig:
      properties:
        projectID:
          description: ID of project
          type: string
        externalName:
          type: string
        appType:
          $ref: '#/components/schemas/appType'
        productKey:
          type: string
        emailFrom:
          type: string
        smsFrom:
          type: string
        externalApplicationProtocolVersion:
          type: string
        webhookURL:
          type: string
        webhookUsername:
          type: string
        webhookPassword:
          type: string
        webhookTestInvalidUsername:
          type: string
        webhookTestValidUsername:
          type: string
        webhookTestValidPassword:
          type: string
        externalApplicationUsername:
          type: string
        externalApplicationPassword:
          type: string
        legacyAuthMethodsUrl:
          type: string
        passwordVerifyUrl:
          type: string
        authSuccessRedirectUrl:
          type: string
        passwordResetUrl:
          type: string
        allowUserRegistration:
          type: boolean
        allowIPStickiness:
          type: boolean
        passkeyAppendInterval:
          enum:
          - not_specified
          - 0d
          - 1d
          - 3d
          - 1w
          - 3w
          - 1m
          - 3m
          type: string
        cliSecret:
          type: string
        fallbackLanguage:
          type: string
        autoDetectLanguage:
          type: boolean
        integrationModeHosted:
          type: boolean
        integrationModeAPI:
          type: boolean
        integrationModeWebComponent:
          type: boolean
        hasExistingUsers:
          type: boolean
        hasVerifiedSession:
          type: boolean
        hasGeneratedSession:
          type: boolean
        hasStartedUsingPasskeys:
          type: boolean
        hasStartedUsingSessions:
          type: boolean
        environment:
          enum:
          - dev
          - prod
          type: string
        frontendFramework:
          enum:
          - not_specified
          - react
          - vuejs
          - vanillajs
          type: string
        backendLanguage:
          enum:
          - not_specified
          - javascript
          - php
          - go
          type: string
        backendAPIUrl:
          type: string
        frontendAPIUrl:
          type: string
        applicationUrl:
          type: string
        useCli:
          type: boolean
        doubleOptIn:
          type: boolean
        userFullNameRequired:
          type: boolean
        webauthnRPID:
          type: string
        domain:
          type: string
        webComponentDebug:
          type: boolean
        smtpUseCustom:
          type: boolean
        smtpHost:
          type: string
        smtpPort:
          type: integer
        smtpUsername:
          type: string
        smtpPassword:
          type: string
        supportEmail:
          type: string
        webhookActions:
          items:
            type: string
          type: array
        signupFlow:
          enum:
          - PasskeyWithEmailOTPFallback
          - EmailOTPSignup
          type: string
        signupFlowOptions:
          type: object
        loginFlow:
          enum:
          - PasskeyWithEmailOTPFallback
          type: string
        loginFlowOptions:
          type: object
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          enum:
          - active
          - configuring
          type: string
      required:
      - allowIPStickiness
      - allowUserRegistration
      - appType
      - applicationUrl
      - authSuccessRedirectUrl
      - autoDetectLanguage
      - backendAPIUrl
      - backendLanguage
      - cliSecret
      - created
      - domain
      - doubleOptIn
      - emailFrom
      - environment
      - externalApplicationPassword
      - externalApplicationProtocolVersion
      - externalApplicationUsername
      - externalName
      - fallbackLanguage
      - frontendAPIUrl
      - frontendFramework
      - hasExistingUsers
      - hasGeneratedSession
      - hasStartedUsingPasskeys
      - hasStartedUsingSessions
      - hasVerifiedSession
      - integrationModeAPI
      - integrationModeHosted
      - integrationModeWebComponent
      - legacyAuthMethodsUrl
      - loginFlow
      - loginFlowOptions
      - passkeyAppendInterval
      - passwordResetUrl
      - passwordVerifyUrl
      - productKey
      - projectID
      - signupFlow
      - signupFlowOptions
      - smsFrom
      - smtpHost
      - smtpPassword
      - smtpPort
      - smtpUseCustom
      - smtpUsername
      - status
      - supportEmail
      - updated
      - useCli
      - userFullNameRequired
      - webComponentDebug
      - webauthnRPID
      - webhookActions
      - webhookPassword
      - webhookTestInvalidUsername
      - webhookTestValidPassword
      - webhookTestValidUsername
      - webhookURL
      - webhookUsername
      type: object
    projectConfigWebhookTestReq:
      properties:
        action:
          enum:
          - authMethods
          - passwordVerify
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - action
      type: object
    projectConfigWebhookTestRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/projectConfigWebhookTestRsp_allOf_data'
        required:
        - data
        type: object
    emailTemplateCreateReq:
      properties:
        lang:
          enum:
          - en
          - de
          - fr
          type: string
        type:
          enum:
          - email_link
          - email_link_login
          - login_notification
          - passkey_notification
          - email_code
          type: string
        name:
          type: string
        subject:
          type: string
        action:
          type: string
        plainTextBody:
          type: string
        htmlTextTitle:
          type: string
        htmlTextBody:
          type: string
        htmlTextButton:
          type: string
        htmlColorFont:
          type: string
        htmlColorBackgroundOuter:
          type: string
        htmlColorBackgroundInner:
          type: string
        htmlColorButton:
          type: string
        htmlColorButtonFont:
          type: string
        isDefault:
          type: boolean
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - htmlColorBackgroundInner
      - htmlColorBackgroundOuter
      - htmlColorButton
      - htmlColorButtonFont
      - htmlColorFont
      - htmlTextBody
      - htmlTextButton
      - htmlTextTitle
      - isDefault
      - lang
      - name
      - plainTextBody
      - subject
      - type
      type: object
    emailTemplateCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/emailTemplateCreateRsp_allOf_data'
        required:
        - data
        type: object
    emailTemplateDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    smsTemplateCreateReq:
      properties:
        type:
          enum:
          - sms_code
          - passkey_notification
          type: string
        name:
          type: string
        textPlain:
          type: string
        isDefault:
          type: boolean
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - isDefault
      - name
      - textPlain
      - type
      type: object
    smsTemplateCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/smsTemplateCreateRsp_allOf_data'
        required:
        - data
        type: object
    smsTemplateDeleteReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      type: object
    sessionTokenCreateReq:
      properties:
        userID:
          description: ID of the user
          type: string
        userData:
          description: Additional user data in JSON format
          example: "{\"user_id\":123}"
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - userData
      - userID
      type: object
    sessionTokenCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/sessionTokenCreateRsp_allOf_data'
        required:
        - data
        type: object
    sessionTokenVerifyReq:
      properties:
        token:
          example: 6GQd8ZgoCLlWld5lY25Dc8wYGLksvvRyaoxYrStX3o4WvKwcKGXWHiHtziTrEYss
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - token
      type: object
    sessionTokenVerifyRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/sessionTokenVerifyRsp_allOf_data'
        required:
        - data
        type: object
    authTokenValidateReq:
      properties:
        token:
          example: 6GQd8ZgoCLlWld5lY25Dc8wYGLksvvRyaoxYrStX3o4WvKwcKGXWHiHtziTrEYss
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - token
      type: object
    authTokenValidateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/sessionTokenVerifyRsp_allOf_data'
        required:
        - data
        type: object
    sessionConfigUpdateReq:
      properties:
        appType:
          $ref: '#/components/schemas/appType'
        active:
          type: boolean
        shortLifetimeMinutes:
          type: integer
        shortCookieDomain:
          type: string
        shortCookieSecure:
          type: boolean
        shortCookieSameSite:
          enum:
          - lax
          - strict
          - none
          type: string
        longLifetimeValue:
          type: integer
        longLifetimeUnit:
          enum:
          - min
          - hour
          type: string
        longInactivityValue:
          type: integer
        longInactivityUnit:
          enum:
          - min
          - hour
          type: string
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - appType
      type: object
    sessionConfigGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/sessionConfig'
        required:
        - data
        type: object
    sessionConfig:
      properties:
        projectID:
          description: ID of project
          type: string
        appType:
          $ref: '#/components/schemas/appType'
        active:
          type: boolean
        shortLifetimeMinutes:
          type: integer
        shortCookieDomain:
          type: string
        shortCookieSecure:
          type: boolean
        shortCookieSameSite:
          enum:
          - lax
          - strict
          - none
          type: string
        longLifetimeValue:
          type: integer
        longLifetimeUnit:
          enum:
          - min
          - hour
          - day
          type: string
        longInactivityValue:
          type: integer
        longInactivityUnit:
          enum:
          - min
          - hour
          - day
          type: string
        jwtAudience:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
      required:
      - appType
      - created
      - jwtAudience
      - longInactivityUnit
      - longInactivityValue
      - longLifetimeUnit
      - longLifetimeValue
      - projectID
      - shortCookieDomain
      - shortCookieSameSite
      - shortCookieSecure
      - shortLifetimeMinutes
      - updated
      type: object
    longSessionListRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/longSessionListRsp_allOf_data'
        required:
        - data
        type: object
    longSessionGetRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/longSessionGetRsp_allOf_data'
        required:
        - data
        type: object
    longSession:
      properties:
        ID:
          type: string
        userID:
          description: ID of the user
          type: string
        userIdentifier:
          type: string
        userFullName:
          type: string
        deviceID:
          description: ID of the device
          type: string
        browserName:
          type: string
        browserVersion:
          type: string
        osName:
          type: string
        osVersion:
          type: string
        expires:
          description: Timestamp of when long session expires in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        lastAction:
          description: Timestamp of when last action was done on long session in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          description: status values of a long session
          enum:
          - active
          - logged_out
          - expired
          - inactivity_reached
          - revoked
          type: string
      required:
      - ID
      - browserName
      - browserVersion
      - created
      - deviceID
      - expires
      - lastAction
      - osName
      - osVersion
      - status
      - updated
      - userFullName
      - userID
      - userIdentifier
      type: object
    longSessionRevokeReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
    associationTokenCreateReq:
      properties:
        loginIdentifier:
          type: string
        loginIdentifierType:
          $ref: '#/components/schemas/loginIdentifierType'
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
      required:
      - clientInfo
      - loginIdentifier
      - loginIdentifierType
      type: object
    associationTokenCreateRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            $ref: '#/components/schemas/associationTokenCreateRsp_allOf_data'
        required:
        - data
        type: object
    emptyReq:
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        clientInfo:
          $ref: '#/components/schemas/clientInfo'
    requestID:
      description: "Unique ID of request, you can provide your own while making the\
        \ request, if not the ID will be randomly generated on server side"
      example: req-557...663
      type: string
    clientInfo:
      properties:
        remoteAddress:
          description: client's IP address
          example: ::ffff:172.18.0.1
          type: string
        userAgent:
          description: client's User Agent
          example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,\
            \ like Gecko) Chrome/104.0.0.0 Safari/537.36"
          type: string
      required:
      - remoteAddress
      - userAgent
      type: object
    requestData:
      description: "Data about the request itself, can be used for debugging"
      example:
        requestID: req-557...663
        link: https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
      properties:
        requestID:
          description: "Unique ID of request, you can provide your own while making\
            \ the request, if not the ID will be randomly generated on server side"
          example: req-557...663
          type: string
        link:
          description: Link to dashboard with details about request
          example: https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
          type: string
      required:
      - link
      - requestID
      type: object
    genericRsp:
      example:
        runtime: 0.06167686
        message: OK
        requestData:
          requestID: req-557...663
          link: https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
        httpStatusCode: 231
      properties:
        httpStatusCode:
          description: HTTP status code of operation
          format: int32
          maximum: 599
          minimum: 200
          type: integer
        message:
          example: OK
          type: string
        requestData:
          $ref: '#/components/schemas/requestData'
        runtime:
          description: Runtime in seconds for this request
          example: 0.06167686
          format: float
          type: number
      required:
      - httpStatusCode
      - message
      - requestData
      - runtime
      type: object
    errorRsp:
      allOf:
      - $ref: '#/components/schemas/genericRsp'
      - properties:
          data:
            type: object
          error:
            $ref: '#/components/schemas/errorRsp_allOf_error'
        required:
        - error
        type: object
    created:
      description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
        format
      type: string
    paging:
      properties:
        page:
          default: 1
          description: current page returned in response
          type: integer
        totalPages:
          description: total number of pages available
          type: integer
        totalItems:
          description: total number of items available
          type: integer
      required:
      - page
      - totalItems
      - totalPages
      type: object
    authMethod:
      description: Authentication methods
      enum:
      - email
      - phone_number
      - webauthn
      - password
      type: string
    authMethods:
      items:
        $ref: '#/components/schemas/authMethod'
      type: array
    userID:
      description: ID of the user
      type: string
    additionalPayload:
      description: Additional payload in JSON format
      example: "{\"projectAbbreviation\":\"CRBD\"}"
      type: string
    emailLinkID:
      description: ID of the email magic link
      type: string
    updated:
      description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
        format
      type: string
    emailCodeID:
      description: ID of the email OTP
      type: string
    projectID:
      description: ID of project
      type: string
    status:
      description: Generic status that can describe Corbado entities
      enum:
      - active
      - pending
      - deleted
      type: string
    ID:
      description: generic ID
      type: string
    userEmail:
      description: User's email
      properties:
        ID:
          description: generic ID
          type: string
        email:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          $ref: '#/components/schemas/status'
      required:
      - ID
      - created
      - email
      - status
      - updated
      type: object
    userPhoneNumber:
      description: User's phone number
      properties:
        ID:
          description: generic ID
          type: string
        phoneNumber:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          $ref: '#/components/schemas/status'
      required:
      - ID
      - created
      - phoneNumber
      - status
      - updated
      type: object
    fullUser:
      description: User entry with emails and phone numbers
      properties:
        ID:
          description: ID of the user
          type: string
        name:
          type: string
        fullName:
          type: string
        created:
          description: Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        updated:
          description: Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss
            format
          type: string
        status:
          $ref: '#/components/schemas/status'
        emails:
          items:
            $ref: '#/components/schemas/userEmail'
          type: array
        phoneNumbers:
          items:
            $ref: '#/components/schemas/userPhoneNumber'
          type: array
      required:
      - ID
      - created
      - emails
      - fullName
      - name
      - phoneNumbers
      - status
      - updated
      type: object
    emailID:
      description: ID of the email
      type: string
    deleted:
      description: Timestamp of when the entity was deleted in yyyy-MM-dd'T'HH:mm:ss
        format
      type: string
    phoneNumberID:
      description: ID of the phone number
      type: string
    loginIdentifierType:
      description: Login Identifier type
      enum:
      - email
      - phone_number
      - custom
      type: string
    appType:
      description: Application type
      enum:
      - empty
      - web
      - native
      type: string
    deviceID:
      description: ID of the device
      type: string
    authMethodsListRsp_allOf_data:
      properties:
        selectMethods:
          items:
            $ref: '#/components/schemas/authMethod'
          type: array
        possibleMethods:
          items:
            $ref: '#/components/schemas/authMethod'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - possibleMethods
      - selectMethods
      type: object
    userAuthLogListRsp_allOf_data:
      properties:
        rows:
          items:
            $ref: '#/components/schemas/userAuthLog'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - rows
      type: object
    smsCodeSendRsp_allOf_data:
      properties:
        smsCodeID:
          example: sms-162...843
          type: string
      required:
      - smsCodeID
      type: object
    emailLinkSendRsp_allOf_data:
      properties:
        emailLinkID:
          example: eml-146...452
          type: string
      required:
      - emailLinkID
      type: object
    emailLinkGetRsp_allOf_data:
      properties:
        emailLink:
          $ref: '#/components/schemas/emailLink'
      required:
      - emailLink
      type: object
    emailCodeSendRsp_allOf_data:
      properties:
        emailCodeID:
          example: emc-146...452
          type: string
      required:
      - emailCodeID
      type: object
    emailCodeGetRsp_allOf_data:
      properties:
        emailCode:
          $ref: '#/components/schemas/emailCode'
      required:
      - emailCode
      type: object
    userCreateRsp_allOf_data:
      properties:
        userID:
          type: string
        emailID:
          type: string
        phoneNumberID:
          type: string
      required:
      - emailID
      - phoneNumberID
      - userID
      type: object
    userListRsp_allOf_data:
      properties:
        users:
          items:
            $ref: '#/components/schemas/fullUser'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - users
      type: object
    userStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/userStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    userEmailCreateRsp_allOf_data:
      properties:
        emailID:
          type: string
      required:
      - emailID
      type: object
    userEmailGetRsp_allOf_data:
      properties:
        email:
          $ref: '#/components/schemas/email'
      required:
      - email
      type: object
    userPhoneNumberCreateRsp_allOf_data:
      properties:
        phoneNumberID:
          type: string
      required:
      - phoneNumberID
      type: object
    userPhoneNumberGetRsp_allOf_data:
      properties:
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
      required:
      - phoneNumber
      type: object
    userCustomLoginIdentifierCreateRsp_allOf_data:
      properties:
        customLoginIdentifierID:
          type: string
      required:
      - customLoginIdentifierID
      type: object
    userCustomLoginIdentifierGetRsp_allOf_data:
      properties:
        customLoginIdentifier:
          $ref: '#/components/schemas/customLoginIdentifier'
      required:
      - customLoginIdentifier
      type: object
    requestLogsListRsp_allOf_data:
      properties:
        logs:
          items:
            $ref: '#/components/schemas/requestLog'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - logs
      - paging
      type: object
    webhookLogsListRsp_allOf_data:
      properties:
        logs:
          items:
            $ref: '#/components/schemas/webhookLog'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - logs
      - paging
      type: object
    trackingStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/trackingStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    trackingDetailedStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/trackingDetailedStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    trackingOSStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/trackingOSStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    trackingOSDetailedStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/trackingOSDetailedStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    trackingBrowserStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/trackingBrowserStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    trackingBrowserDetailedStatsListRsp_allOf_data:
      properties:
        stats:
          items:
            $ref: '#/components/schemas/trackingBrowserDetailedStats'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - paging
      - stats
      type: object
    projectConfigWebhookTestRsp_allOf_data:
      properties:
        code:
          type: string
        details:
          type: string
        runtime:
          type: number
      required:
      - code
      - details
      - runtime
      type: object
    emailTemplateCreateRsp_allOf_data:
      properties:
        emailTemplateID:
          type: string
      required:
      - emailTemplateID
      type: object
    smsTemplateCreateRsp_allOf_data:
      properties:
        smsTemplateID:
          type: string
      required:
      - smsTemplateID
      type: object
    sessionTokenCreateRsp_allOf_data:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    sessionTokenVerifyRsp_allOf_data:
      properties:
        userID:
          description: ID of the user
          type: string
        user:
          $ref: '#/components/schemas/fullUser'
        userData:
          type: string
      required:
      - user
      - userData
      - userID
      type: object
    longSessionListRsp_allOf_data:
      properties:
        longSessions:
          items:
            $ref: '#/components/schemas/longSession'
          type: array
        paging:
          $ref: '#/components/schemas/paging'
      required:
      - longSessions
      - paging
      type: object
    longSessionGetRsp_allOf_data:
      properties:
        longSession:
          $ref: '#/components/schemas/longSession'
      required:
      - longSession
      type: object
    associationTokenCreateRsp_allOf_data:
      properties:
        token:
          type: string
        rejectionReason:
          type: string
      type: object
    errorRsp_allOf_error_validation:
      properties:
        field:
          type: string
        message:
          type: string
      required:
      - field
      - message
      type: object
    errorRsp_allOf_error:
      properties:
        type:
          description: Type of error
          type: string
        details:
          description: Details of error
          type: string
        validation:
          description: Validation errors per field
          items:
            $ref: '#/components/schemas/errorRsp_allOf_error_validation'
          type: array
        links:
          description: Additional links to help understand the error
          items:
            type: string
          type: array
      required:
      - links
      - type
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    projectID:
      in: header
      name: X-Corbado-ProjectID
      type: apiKey
